{"ast":null,"code":"import React from 'react';\nimport '../../App.css';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { saveAtt } from '../../redux/actions';\nimport { doUpload } from '../../functions/uploadEditPageFuncs/index';\n\nclass UploadPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.axiosSignal = axios.CancelToken.source();\n\n    this.checkIfAll = () => {\n      let check = true;\n      const selection = this.state.selection;\n      console.log(this.state.selection);\n      Object.keys(selection).forEach(key => {\n        if (key !== 'brand' && key !== 'descrtext') {\n          if (selection[key] === 0 && selection.category !== 3 || selection[key] === null || selection[key] === '') {\n            check = false;\n            this.setState({\n              warning: 'Izpolni vsa polja'\n            });\n          }\n        }\n      });\n\n      if (this.state.photos.length < 3) {\n        check = false;\n        this.setState({\n          warning: 'Izberi tri fotografije'\n        });\n      }\n\n      return check;\n    };\n\n    this.onImageSaved = (photo, index) => {\n      if (this.state.photos.length <= index) {\n        this.setState(state => {\n          const photos = state.photos.concat(photo);\n          return {\n            photos\n          };\n        });\n      } else {\n        this.setState(state => {\n          const photos = state.photos.map((item, j) => {\n            if (j === index) {\n              return photo;\n            } else {\n              return item;\n            }\n          });\n          return {\n            photos\n          };\n        });\n      }\n    };\n\n    this.onSelectionSaved = selection => {\n      this.setState({\n        selection\n      });\n    };\n\n    this.state = {\n      adId: '',\n      photos: [],\n      warning: '',\n      uploadStatus: false,\n      selection: {\n        category: '',\n        subcategory: '',\n        clothsize: '',\n        material: '',\n        condition: '',\n        brand: '',\n        descrtext: '',\n        weight: null,\n        price: null\n      },\n      loading: false\n    };\n    this.handleUpload = this.handleUpload.bind(this);\n  }\n\n  componentWillUnmount() {\n    this.axiosSignal.cancel('Api is being canceled');\n  }\n\n  handleUpload() {\n    this.props.saveAtt(true);\n\n    if (!this.checkIfAll()) {\n      this.setState({\n        warning: \"IZPOLNI VSA POLJA!\"\n      });\n    } else {\n      this.setState({\n        loading: true\n      });\n      doUpload('first', this.state.selection, this.props.loggedInUserId, this.props.loggedInUser, this.axiosSignal, 0, this.state.photos).then(res => this.setState({\n        uploadStatus: true,\n        loading: false\n      })).catch(e => console.error(\"Critical failure: \" + e.message));\n    }\n  }\n\n  render() {\n    return this.props.render({\n      state: this.state,\n      onSelectionSaved: this.onSelectionSaved,\n      onImageSaved: this.onImageSaved,\n      handleUpload: this.handleUpload\n    });\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    loggedInUser: state.loggedInUser,\n    loggedInUserId: state.loggedInUserId,\n    saveAttempt: state.saveAttempt\n  };\n};\n\nconst mapDispatchToProps = {\n  saveAtt: saveAtt\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(UploadPage);","map":{"version":3,"sources":["/home/katja/REACT/test-app/src/pages/Publish/UploadPage.jsx"],"names":["React","axios","connect","saveAtt","doUpload","UploadPage","Component","constructor","props","axiosSignal","CancelToken","source","checkIfAll","check","selection","state","console","log","Object","keys","forEach","key","category","setState","warning","photos","length","onImageSaved","photo","index","concat","map","item","j","onSelectionSaved","adId","uploadStatus","subcategory","clothsize","material","condition","brand","descrtext","weight","price","loading","handleUpload","bind","componentWillUnmount","cancel","loggedInUserId","loggedInUser","then","res","catch","e","error","message","render","mapStateToProps","saveAttempt","mapDispatchToProps"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,SAAQC,QAAR,QAAuB,2CAAvB;;AAGA,MAAMC,UAAN,SAAyBL,KAAK,CAACM,SAA/B,CAAyC;AAExCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AADkB,SAuBhBC,WAvBgB,GAuBFR,KAAK,CAACS,WAAN,CAAkBC,MAAlB,EAvBE;;AAAA,SA6BhBC,UA7BgB,GA6BH,MAAM;AACf,UAAIC,KAAK,GAAG,IAAZ;AACA,YAAMC,SAAS,GAAG,KAAKC,KAAL,CAAWD,SAA7B;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKF,KAAL,CAAWD,SAAvB;AACAI,MAAAA,MAAM,CAACC,IAAP,CAAYL,SAAZ,EAAuBM,OAAvB,CAA+BC,GAAG,IAAI;AAClC,YAAGA,GAAG,KAAK,OAAR,IAAmBA,GAAG,KAAK,WAA9B,EAA2C;AACvC,cAAIP,SAAS,CAACO,GAAD,CAAT,KAAmB,CAAnB,IAAwBP,SAAS,CAACQ,QAAV,KAAuB,CAAhD,IAAqDR,SAAS,CAACO,GAAD,CAAT,KAAmB,IAAxE,IAAgFP,SAAS,CAACO,GAAD,CAAT,KAAmB,EAAtG,EAA0G;AACtGR,YAAAA,KAAK,GAAG,KAAR;AACA,iBAAKU,QAAL,CAAc;AAACC,cAAAA,OAAO,EAAE;AAAV,aAAd;AACH;AACJ;AACJ,OAPD;;AAQA,UAAI,KAAKT,KAAL,CAAWU,MAAX,CAAkBC,MAAlB,GAA2B,CAA/B,EAAkC;AAC9Bb,QAAAA,KAAK,GAAG,KAAR;AACA,aAAKU,QAAL,CAAc;AAACC,UAAAA,OAAO,EAAE;AAAV,SAAd;AACH;;AACD,aAAOX,KAAP;AACH,KA9Ce;;AAAA,SAgDhBc,YAhDgB,GAgDD,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC7B,UAAI,KAAKd,KAAL,CAAWU,MAAX,CAAkBC,MAAlB,IAA4BG,KAAhC,EAAuC;AACnC,aAAKN,QAAL,CAAcR,KAAK,IAAI;AACnB,gBAAMU,MAAM,GAAGV,KAAK,CAACU,MAAN,CAAaK,MAAb,CAAoBF,KAApB,CAAf;AACA,iBAAO;AAACH,YAAAA;AAAD,WAAP;AACH,SAHD;AAIH,OALD,MAKO;AACH,aAAKF,QAAL,CAAcR,KAAK,IAAI;AACnB,gBAAMU,MAAM,GAAGV,KAAK,CAACU,MAAN,CAAaM,GAAb,CAAiB,CAACC,IAAD,EAAOC,CAAP,KAAa;AAC7C,gBAAIA,CAAC,KAAKJ,KAAV,EAAiB;AACb,qBAAOD,KAAP;AACH,aAFD,MAEO;AACH,qBAAOI,IAAP;AACH;AACJ,WANkB,CAAf;AAOJ,iBAAO;AAACP,YAAAA;AAAD,WAAP;AACH,SATG;AAUH;AACJ,KAlEe;;AAAA,SAoEhBS,gBApEgB,GAoEIpB,SAAD,IAAe;AAC9B,WAAKS,QAAL,CAAc;AAACT,QAAAA;AAAD,OAAd;AACH,KAtEe;;AAElB,SAAKC,KAAL,GAAa;AACHoB,MAAAA,IAAI,EAAE,EADH;AAEHV,MAAAA,MAAM,EAAE,EAFL;AAGHD,MAAAA,OAAO,EAAE,EAHN;AAIHY,MAAAA,YAAY,EAAE,KAJX;AAKHtB,MAAAA,SAAS,EAAE;AACPQ,QAAAA,QAAQ,EAAE,EADH;AAEPe,QAAAA,WAAW,EAAE,EAFN;AAGPC,QAAAA,SAAS,EAAE,EAHJ;AAIPC,QAAAA,QAAQ,EAAE,EAJH;AAKPC,QAAAA,SAAS,EAAE,EALJ;AAMPC,QAAAA,KAAK,EAAE,EANA;AAOPC,QAAAA,SAAS,EAAE,EAPJ;AAQPC,QAAAA,MAAM,EAAE,IARD;AASPC,QAAAA,KAAK,EAAE;AATA,OALR;AAgBHC,MAAAA,OAAO,EAAE;AAhBN,KAAb;AAkBM,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAIDC,EAAAA,oBAAoB,GAAG;AACnB,SAAKvC,WAAL,CAAiBwC,MAAjB,CAAwB,uBAAxB;AACH;;AA6CDH,EAAAA,YAAY,GAAG;AACX,SAAKtC,KAAL,CAAWL,OAAX,CAAmB,IAAnB;;AACA,QAAI,CAAC,KAAKS,UAAL,EAAL,EAAwB;AACpB,WAAKW,QAAL,CAAc;AAACC,QAAAA,OAAO,EAAE;AAAV,OAAd;AACH,KAFD,MAEM;AACF,WAAKD,QAAL,CAAc;AAACsB,QAAAA,OAAO,EAAE;AAAV,OAAd;AACAzC,MAAAA,QAAQ,CAAC,OAAD,EAAU,KAAKW,KAAL,CAAWD,SAArB,EAAgC,KAAKN,KAAL,CAAW0C,cAA3C,EAA2D,KAAK1C,KAAL,CAAW2C,YAAtE,EAAoF,KAAK1C,WAAzF,EAAsG,CAAtG,EAAyG,KAAKM,KAAL,CAAWU,MAApH,CAAR,CACC2B,IADD,CACMC,GAAG,IAAI,KAAK9B,QAAL,CAAc;AAACa,QAAAA,YAAY,EAAE,IAAf;AAAqBS,QAAAA,OAAO,EAAE;AAA9B,OAAd,CADb,EAECS,KAFD,CAEOC,CAAC,IAAIvC,OAAO,CAACwC,KAAR,CAAc,uBAAuBD,CAAC,CAACE,OAAvC,CAFZ;AAGH;AACJ;;AAEDC,EAAAA,MAAM,GAAG;AACL,WAAO,KAAKlD,KAAL,CAAWkD,MAAX,CAAkB;AACb3C,MAAAA,KAAK,EAAE,KAAKA,KADC;AAEbmB,MAAAA,gBAAgB,EAAE,KAAKA,gBAFV;AAGbP,MAAAA,YAAY,EAAE,KAAKA,YAHN;AAIbmB,MAAAA,YAAY,EAAE,KAAKA;AAJN,KAAlB,CAAP;AAMH;;AA7FoC;;AAgGzC,MAAMa,eAAe,GAAG5C,KAAK,IAAI;AAC7B,SAAO;AACLoC,IAAAA,YAAY,EAAEpC,KAAK,CAACoC,YADf;AAELD,IAAAA,cAAc,EAAEnC,KAAK,CAACmC,cAFjB;AAGLU,IAAAA,WAAW,EAAE7C,KAAK,CAAC6C;AAHd,GAAP;AAKH,CAND;;AAQA,MAAMC,kBAAkB,GAAG;AACvB1D,EAAAA,OAAO,EAAEA;AADc,CAA3B;AAIA,eAAeD,OAAO,CAACyD,eAAD,EAAkBE,kBAAlB,CAAP,CAA8CxD,UAA9C,CAAf","sourcesContent":["import React from 'react';\nimport '../../App.css';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { saveAtt } from '../../redux/actions';\nimport {doUpload} from '../../functions/uploadEditPageFuncs/index';\n\n\nclass UploadPage extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n            adId: '',\n            photos: [],\n            warning: '',\n            uploadStatus: false,\n            selection: {\n                category: '',\n                subcategory: '',\n                clothsize: '',\n                material: '',\n                condition: '',\n                brand: '',\n                descrtext: '',\n                weight: null,\n                price: null\n            },\n            loading: false\n        };\n        this.handleUpload = this.handleUpload.bind(this);\n    }\n\n    axiosSignal = axios.CancelToken.source();\n\n    componentWillUnmount() {\n        this.axiosSignal.cancel('Api is being canceled');\n    }\n\n    checkIfAll = () => {\n        let check = true;\n        const selection = this.state.selection;\n        console.log(this.state.selection);\n        Object.keys(selection).forEach(key => {\n            if(key !== 'brand' && key !== 'descrtext') {\n                if((selection[key] === 0 && selection.category !== 3)|| selection[key] === null || selection[key] === '') {\n                    check = false;\n                    this.setState({warning: 'Izpolni vsa polja'});\n                }\n            }\n        });\n        if (this.state.photos.length < 3) {\n            check = false;\n            this.setState({warning: 'Izberi tri fotografije'});\n        }\n        return check;\n    }\n\n    onImageSaved = (photo, index) => {\n        if (this.state.photos.length <= index) {\n            this.setState(state => {\n                const photos = state.photos.concat(photo);\n                return {photos};\n            });\n        } else {\n            this.setState(state => {\n                const photos = state.photos.map((item, j) => {\n                if (j === index) {\n                    return photo;\n                } else {\n                    return item;\n                }\n            });\n            return {photos};\n        });\n        }\n    }\n\n    onSelectionSaved = (selection) => {\n        this.setState({selection});\n    }\n\n    handleUpload() {\n        this.props.saveAtt(true);    \n        if (!this.checkIfAll()) {\n            this.setState({warning: \"IZPOLNI VSA POLJA!\"});\n        }else {\n            this.setState({loading: true});\n            doUpload('first', this.state.selection, this.props.loggedInUserId, this.props.loggedInUser, this.axiosSignal, 0, this.state.photos)\n            .then(res => this.setState({uploadStatus: true, loading: false}))\n            .catch(e => console.error(\"Critical failure: \" + e.message));\n        }\n    }\n\n    render() {\n        return this.props.render({\n                    state: this.state,\n                    onSelectionSaved: this.onSelectionSaved,\n                    onImageSaved: this.onImageSaved,\n                    handleUpload: this.handleUpload\n                })\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n      loggedInUser: state.loggedInUser,\n      loggedInUserId: state.loggedInUserId,\n      saveAttempt: state.saveAttempt\n    };\n};\n\nconst mapDispatchToProps = {\n    saveAtt: saveAtt\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (UploadPage);\n"]},"metadata":{},"sourceType":"module"}