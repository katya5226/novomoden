{"ast":null,"code":"var _jsxFileName = \"/home/katja/REACT/test-app/src/pages/Chat/ChatPage.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport UpperLine from '../../components/UpperLine';\nimport Header from '../../components/Header';\nimport { NavLink } from 'react-router-dom';\nimport BreadCrumbs from '../../components/BreadCrumbs';\nimport NavBar from '../../components/NavBar';\nimport '../../App.css';\n\nclass ChatPage extends Component {\n  constructor(props) {\n    super(props);\n    this.abortController = new AbortController();\n\n    this.fetchNumberOfUnread = iLId => {\n      fetch('/messageroutes', {\n        signal: this.abortController.signal,\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify({\n          type: 6\n        })\n      }).then(res => res.json()).then(res => {\n        this.setState(state => {\n          const unread = state.unread.concat(res);\n          return { ...state,\n            unread\n          };\n        });\n      }).catch(e => console.error(\"Critical failure: \" + e.message));\n    };\n\n    this.state = {\n      conversations: [],\n      unread: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('/messageroutes', {\n      signal: this.abortController.signal,\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      body: JSON.stringify({\n        type: 3\n      })\n    }).then(res => res.json()).then(res => {\n      this.setState({\n        conversations: res\n      });\n    }).catch(e => console.error(\"Critical failure: \" + e.message));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(UpperLine, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(NavBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(BreadCrumbs, {\n      pathname: this.props.location.pathname,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundColor: 'rgb(255, 255, 255, 0.5)',\n        textAlign: 'left',\n        paddingLeft: '100px',\n        paddingBottom: '50px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }, \"POGOVORI:\"), this.state.conversations.map((conv, index) => {\n      let iLId = 0;\n      let conversant = '';\n      conv.id1 === this.props.loggedInUserId ? iLId = conv.id2 : iLId = conv.id1;\n      conv.conversant1 === this.props.loggedInUser ? conversant = conv.conversant2 : conversant = conv.conversant1;\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: index,\n        style: {\n          listStyleType: 'none',\n          paddingLeft: '200px',\n          paddingTop: '10px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 32\n        }\n      }, /*#__PURE__*/React.createElement(NavLink, {\n        style: {\n          color: 'black',\n          textTransform: 'uppercase',\n          fontWeight: 'bold'\n        },\n        exact: true,\n        to: '/chatpage/conversation?' + iLId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 33\n        }\n      }, conversant));\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    loggedInUser: state.loggedInUser,\n    loggedInUserId: state.loggedInUserId\n  };\n};\n\nexport default connect(mapStateToProps)(ChatPage);","map":{"version":3,"sources":["/home/katja/REACT/test-app/src/pages/Chat/ChatPage.jsx"],"names":["React","Component","connect","UpperLine","Header","NavLink","BreadCrumbs","NavBar","ChatPage","constructor","props","abortController","AbortController","fetchNumberOfUnread","iLId","fetch","signal","method","headers","body","JSON","stringify","type","then","res","json","setState","state","unread","concat","catch","e","console","error","message","conversations","componentDidMount","render","location","pathname","backgroundColor","textAlign","paddingLeft","paddingBottom","map","conv","index","conversant","id1","loggedInUserId","id2","conversant1","loggedInUser","conversant2","listStyleType","paddingTop","color","textTransform","fontWeight","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport UpperLine from '../../components/UpperLine';\nimport Header from '../../components/Header';\nimport { NavLink } from 'react-router-dom';\nimport BreadCrumbs from '../../components/BreadCrumbs';\nimport NavBar from '../../components/NavBar';\nimport '../../App.css';\n\n\nclass ChatPage extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n        this.state = {\n            conversations: [],\n            unread: []\n        }\n    }\n\n    abortController = new AbortController();\n    componentDidMount() {\n        fetch('/messageroutes', {\n            signal: this.abortController.signal,\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            body: JSON.stringify({\n                type: 3\n            })\n        })\n        .then(res => res.json())\n        .then(res => {this.setState({conversations: res})})\n        .catch(e => console.error(\"Critical failure: \" + e.message));\n    }\n\n\n    fetchNumberOfUnread = (iLId) => {\n        fetch('/messageroutes', {\n            signal: this.abortController.signal,\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            body: JSON.stringify({\n                type: 6\n            })\n        })\n        .then(res => res.json())\n        .then(res => {this.setState(state => {\n                                        const unread = state.unread.concat(res);\n                                        return {...state, unread };\n          });\n        })\n        .catch(e => console.error(\"Critical failure: \" + e.message));\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n            <UpperLine/>\n            <Header/>\n            <NavBar/>\n            <BreadCrumbs pathname = {this.props.location.pathname}/>\n                <div style = {{backgroundColor: 'rgb(255, 255, 255, 0.5)', textAlign: 'left', paddingLeft: '100px', paddingBottom: '50px'}}>\n                    <br/>\n                    <h2>POGOVORI:</h2>\n                    {this.state.conversations.map((conv, index) => {\n                        let iLId = 0;\n                        let conversant = '';\n                        conv.id1 === this.props.loggedInUserId ? iLId = conv.id2 : iLId = conv.id1;\n                        conv.conversant1 === this.props.loggedInUser ? conversant = conv.conversant2 : conversant = conv.conversant1;\n                        return <li key = {index} style = {{listStyleType: 'none', paddingLeft: '200px', paddingTop: '10px'}}>\n                                <NavLink style = {{color: 'black', textTransform: 'uppercase', fontWeight: 'bold'}} exact to = {'/chatpage/conversation?' + iLId}>{conversant}</NavLink>\n                            </li>\n                    })}\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n      loggedInUser: state.loggedInUser,\n      loggedInUserId: state.loggedInUserId\n    };\n};\n\nexport default connect(mapStateToProps) (ChatPage)"]},"metadata":{},"sourceType":"module"}