{"ast":null,"code":"var _jsxFileName = \"/home/katja/REACT/test-app/src/pages/Chat/AllMessages.jsx\";\nimport React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport UpperLine from '../../components/UpperLine';\nimport Header from '../../components/Header';\nimport NavBar from '../../components/NavBar';\nimport Bottom from '../../components/Bottom';\nimport BreadCrumbs from '../../components/BreadCrumbs';\nimport AdSpace from '../../components/AdSpace';\nimport '../../App.css';\n\nclass AllMessages extends Component {\n  constructor(props) {\n    super(props);\n    this.abortController = new AbortController();\n\n    this.msgFetch = () => {\n      const iLId = this.interlocutorId();\n      this.interlocutor(iLId);\n      fetch('/fetchmessages', {\n        signal: this.abortController.signal,\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify({\n          conversantId: iLId\n        })\n      }).then(res => res.json()).then(results => {\n        const messages = results.map(result => ({\n          time: result.date_created,\n          sender: result.sender,\n          msg: result.msg\n        }));\n        this.setState({\n          messages\n        });\n      }).catch(e => console.error(\"Critical failure: \" + e.message));\n    };\n\n    this.interlocutor = iLId => {\n      fetch('/messageroutes', {\n        signal: this.abortController.signal,\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify({\n          type: 4,\n          iLId: iLId\n        })\n      }).then(res => res.json()).then(res => this.setState({\n        interlocutor: res[0].first_name\n      })).catch(e => console.error(\"Critical failure: \" + e.message));\n    };\n\n    this.switchRender = () => {\n      const messages = this.state.messages;\n\n      if (this.state.userId === '0') {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            backgroundColor: 'rgb(255,255,255,0.5)'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 20\n          }\n        }, /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }\n        }), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 22\n          }\n        }), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 27\n          }\n        }), /*#__PURE__*/React.createElement(\"h2\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }\n        }, \"PROSIMO PRIJAVITE SE V SISTEM!\"), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }\n        }), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 22\n          }\n        }), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 27\n          }\n        }));\n      } else return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          backgroundColor: 'rgb(255, 255, 255, 0.8)'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          fontSize: '30px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }\n      }, \"ZGODOVINA POGOVOROV S/Z: \", /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 70\n        }\n      }, this.state.interlocutor)), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"ul\", {\n        style: {\n          display: 'inline-block',\n          maxWidth: '60vw'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }\n      }, messages.map((msg, index) => /*#__PURE__*/React.createElement(\"li\", {\n        key: index,\n        style: {\n          listStyleType: 'none',\n          lineHeight: '35px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }\n      }, msg.time.substring(8, 10), \"-\", msg.time.substring(6, 7), \"-\", msg.time.substring(0, 4), \" \", msg.time.substring(11, 16), \": \", /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 129\n        }\n      }, msg.sender), \": \", msg.msg))), /*#__PURE__*/React.createElement(NavLink, {\n        exact: true,\n        to: '/chatpage/conversation?' + this.interlocutorId(),\n        className: \"btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }\n      }, \"NAZAJ\"));\n    };\n\n    this.state = {\n      userId: '0',\n      interlocutor: '',\n      messages: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('/sessionroutes', {\n      signal: this.abortController.signal\n    }).then(res => res.json()).then(res => this.setState({\n      userId: res.userId\n    })).catch(e => console.error(\"Critical failure: \" + e.message));\n    this.msgFetch();\n  }\n\n  componentWillUnmount() {\n    this.abortController.abort();\n  }\n\n  interlocutorId() {\n    function subStrAfterChars(str, char) {\n      return str.substring(str.indexOf(char) + 1);\n    }\n\n    const interlocutorId = subStrAfterChars(window.location.href, '?');\n    return interlocutorId;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(UpperLine, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(NavBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(BreadCrumbs, {\n      pathname: '/chatpage/conversation?' + this.interlocutorId() + '/all?' + this.interlocutorId(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }), this.switchRender(), /*#__PURE__*/React.createElement(AdSpace, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Bottom, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    loggedInUser: state.loggedInUser,\n    loggedInUserId: state.loggedInUserId\n  };\n};\n\nexport default connect(mapStateToProps)(AllMessages);","map":{"version":3,"sources":["/home/katja/REACT/test-app/src/pages/Chat/AllMessages.jsx"],"names":["React","Component","NavLink","connect","UpperLine","Header","NavBar","Bottom","BreadCrumbs","AdSpace","AllMessages","constructor","props","abortController","AbortController","msgFetch","iLId","interlocutorId","interlocutor","fetch","signal","method","headers","body","JSON","stringify","conversantId","then","res","json","results","messages","map","result","time","date_created","sender","msg","setState","catch","e","console","error","message","type","first_name","switchRender","state","userId","backgroundColor","fontSize","display","maxWidth","index","listStyleType","lineHeight","substring","componentDidMount","componentWillUnmount","abort","subStrAfterChars","str","char","indexOf","window","location","href","render","mapStateToProps","loggedInUser","loggedInUserId"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAO,eAAP;;AAGA,MAAMC,WAAN,SAA0BT,SAA1B,CAAoC;AACnCU,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AADkB,SAShBC,eATgB,GASE,IAAIC,eAAJ,EATF;;AAAA,SAwBhBC,QAxBgB,GAwBL,MAAM;AACb,YAAMC,IAAI,GAAG,KAAKC,cAAL,EAAb;AACA,WAAKC,YAAL,CAAkBF,IAAlB;AACAG,MAAAA,KAAK,CAAC,gBAAD,EAAmB;AACpBC,QAAAA,MAAM,EAAE,KAAKP,eAAL,CAAqBO,MADT;AAEpBC,QAAAA,MAAM,EAAE,MAFY;AAGpBC,QAAAA,OAAO,EAAE;AACL,0BAAgB,kBADX;AAEL,oBAAU;AAFL,SAHW;AAOpBC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,UAAAA,YAAY,EAAEV;AADG,SAAf;AAPc,OAAnB,CAAL,CAWCW,IAXD,CAWMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAXb,EAYCF,IAZD,CAYMG,OAAO,IAAI;AACb,cAAMC,QAAQ,GAAGD,OAAO,CAACE,GAAR,CAAYC,MAAM,KAAK;AAACC,UAAAA,IAAI,EAAED,MAAM,CAACE,YAAd;AAA4BC,UAAAA,MAAM,EAAEH,MAAM,CAACG,MAA3C;AAAmDC,UAAAA,GAAG,EAAEJ,MAAM,CAACI;AAA/D,SAAL,CAAlB,CAAjB;AACA,aAAKC,QAAL,CAAc;AAACP,UAAAA;AAAD,SAAd;AACH,OAfD,EAgBCQ,KAhBD,CAgBOC,CAAC,IAAIC,OAAO,CAACC,KAAR,CAAc,uBAAuBF,CAAC,CAACG,OAAvC,CAhBZ;AAiBH,KA5Ce;;AAAA,SAsDhBzB,YAtDgB,GAsDAF,IAAD,IAAU;AACrBG,MAAAA,KAAK,CAAC,gBAAD,EAAmB;AACpBC,QAAAA,MAAM,EAAE,KAAKP,eAAL,CAAqBO,MADT;AAEpBC,QAAAA,MAAM,EAAE,MAFY;AAGpBC,QAAAA,OAAO,EAAE;AACL,0BAAgB,kBADX;AAEL,oBAAU;AAFL,SAHW;AAOpBC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBmB,UAAAA,IAAI,EAAE,CADW;AAEjB5B,UAAAA,IAAI,EAAEA;AAFW,SAAf;AAPc,OAAnB,CAAL,CAWGW,IAXH,CAWQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAXf,EAYCF,IAZD,CAYMC,GAAG,IAAI,KAAKU,QAAL,CAAc;AAACpB,QAAAA,YAAY,EAAEU,GAAG,CAAC,CAAD,CAAH,CAAOiB;AAAtB,OAAd,CAZb,EAaCN,KAbD,CAaOC,CAAC,IAAIC,OAAO,CAACC,KAAR,CAAc,uBAAuBF,CAAC,CAACG,OAAvC,CAbZ;AAcH,KArEe;;AAAA,SAuEhBG,YAvEgB,GAuED,MAAM;AAEjB,YAAMf,QAAQ,GAAG,KAAKgB,KAAL,CAAWhB,QAA5B;;AAEA,UAAI,KAAKgB,KAAL,CAAWC,MAAX,KAAsB,GAA1B,EAA+B;AAC3B,4BAAO;AAAK,UAAA,KAAK,EAAI;AAACC,YAAAA,eAAe,EAAE;AAAlB,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADG,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,eACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADP,eAEH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAFG,eAGH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHG,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHF,eAGO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHP,CAAP;AAKH,OAND,MAOK,oBAAO;AAAK,QAAA,KAAK,EAAI;AAACA,UAAAA,eAAe,EAAE;AAAlB,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADQ,eAER;AAAG,QAAA,KAAK,EAAI;AAACC,UAAAA,QAAQ,EAAE;AAAX,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAAyD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAKH,KAAL,CAAW7B,YAAf,CAAzD,CAFQ,eAGR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHQ,eAIR;AAAI,QAAA,KAAK,EAAI;AAACiC,UAAAA,OAAO,EAAE,cAAV;AAA0BC,UAAAA,QAAQ,EAAE;AAApC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACCrB,QAAQ,CAACC,GAAT,CAAa,CAACK,GAAD,EAAMgB,KAAN,kBACV;AAAI,QAAA,GAAG,EAAEA,KAAT;AAAgB,QAAA,KAAK,EAAE;AAACC,UAAAA,aAAa,EAAE,MAAhB;AAAwBC,UAAAA,UAAU,EAAE;AAApC,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKlB,GAAG,CAACH,IAAJ,CAASsB,SAAT,CAAmB,CAAnB,EAAqB,EAArB,CADL,OACgCnB,GAAG,CAACH,IAAJ,CAASsB,SAAT,CAAmB,CAAnB,EAAqB,CAArB,CADhC,OAC0DnB,GAAG,CAACH,IAAJ,CAASsB,SAAT,CAAmB,CAAnB,EAAqB,CAArB,CAD1D,OACoFnB,GAAG,CAACH,IAAJ,CAASsB,SAAT,CAAmB,EAAnB,EAAsB,EAAtB,CADpF,qBACgH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAInB,GAAG,CAACD,MAAR,CADhH,QACsIC,GAAG,CAACA,GAD1I,CADH,CADD,CAJQ,eASR,oBAAC,OAAD;AAAS,QAAA,KAAK,MAAd;AAAe,QAAA,EAAE,EAAI,4BAA4B,KAAKpB,cAAL,EAAjD;AAAwE,QAAA,SAAS,EAAG,KAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBATQ,CAAP;AAYR,KA9Fe;;AAEZ,SAAK8B,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE,GADC;AAET9B,MAAAA,YAAY,EAAE,EAFL;AAGTa,MAAAA,QAAQ,EAAE;AAHD,KAAb;AAKH;;AAID0B,EAAAA,iBAAiB,GAAG;AAChBtC,IAAAA,KAAK,CAAC,gBAAD,EAAmB;AAACC,MAAAA,MAAM,EAAE,KAAKP,eAAL,CAAqBO;AAA9B,KAAnB,CAAL,CACCO,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMC,GAAG,IAAI,KAAKU,QAAL,CAAc;AAACU,MAAAA,MAAM,EAAEpB,GAAG,CAACoB;AAAb,KAAd,CAFb,EAGCT,KAHD,CAGOC,CAAC,IAAIC,OAAO,CAACC,KAAR,CAAc,uBAAuBF,CAAC,CAACG,OAAvC,CAHZ;AAKA,SAAK5B,QAAL;AACH;;AAED2C,EAAAA,oBAAoB,GAAG;AACnB,SAAK7C,eAAL,CAAqB8C,KAArB;AACH;;AAwBD1C,EAAAA,cAAc,GAAG;AACb,aAAS2C,gBAAT,CAA0BC,GAA1B,EAA+BC,IAA/B,EAAqC;AACjC,aAAOD,GAAG,CAACL,SAAJ,CAAcK,GAAG,CAACE,OAAJ,CAAYD,IAAZ,IAAoB,CAAlC,CAAP;AACH;;AACD,UAAM7C,cAAc,GAAG2C,gBAAgB,CAACI,MAAM,CAACC,QAAP,CAAgBC,IAAjB,EAAuB,GAAvB,CAAvC;AACA,WAAOjD,cAAP;AACH;;AA4CDkD,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAG,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,eAII,oBAAC,WAAD;AAAa,MAAA,QAAQ,EAAI,4BAA2B,KAAKlD,cAAL,EAA3B,GAAmD,OAAnD,GAA6D,KAAKA,cAAL,EAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAKK,KAAK6B,YAAL,EALL,eAMI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,eAOI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,CADJ;AAWH;;AA7G+B;;AAgHpC,MAAMsB,eAAe,GAAGrB,KAAK,IAAI;AAC7B,SAAO;AACLsB,IAAAA,YAAY,EAAEtB,KAAK,CAACsB,YADf;AAELC,IAAAA,cAAc,EAAEvB,KAAK,CAACuB;AAFjB,GAAP;AAIH,CALD;;AAOA,eAAenE,OAAO,CAACiE,eAAD,CAAP,CAA0B1D,WAA1B,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport UpperLine from '../../components/UpperLine';\nimport Header from '../../components/Header';\nimport NavBar from '../../components/NavBar';\nimport Bottom from '../../components/Bottom';\nimport BreadCrumbs from '../../components/BreadCrumbs';\nimport AdSpace from '../../components/AdSpace';\nimport '../../App.css';\n\n\nclass AllMessages extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n        this.state = {\n            userId: '0',\n            interlocutor: '',\n            messages: []\n        }\n    }\n\n    abortController = new AbortController();\n\n    componentDidMount() {\n        fetch('/sessionroutes', {signal: this.abortController.signal})\n        .then(res => res.json())\n        .then(res => this.setState({userId: res.userId}))\n        .catch(e => console.error(\"Critical failure: \" + e.message));\n\n        this.msgFetch();\n    }\n\n    componentWillUnmount() {\n        this.abortController.abort();\n    }\n\n    msgFetch = () => {\n        const iLId = this.interlocutorId();\n        this.interlocutor(iLId);\n        fetch('/fetchmessages', {\n            signal: this.abortController.signal,\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            body: JSON.stringify({\n                conversantId: iLId\n            })\n        })\n        .then(res => res.json())\n        .then(results => {\n            const messages = results.map(result => ({time: result.date_created, sender: result.sender, msg: result.msg}));\n            this.setState({messages})\n        })\n        .catch(e => console.error(\"Critical failure: \" + e.message));\n    }\n\n    interlocutorId() {\n        function subStrAfterChars(str, char) {\n            return str.substring(str.indexOf(char) + 1);\n        }\n        const interlocutorId = subStrAfterChars(window.location.href, '?');\n        return interlocutorId;\n    }\n\n    interlocutor = (iLId) => {\n        fetch('/messageroutes', {\n            signal: this.abortController.signal,\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            body: JSON.stringify({\n                type: 4,\n                iLId: iLId,\n            })\n        }).then(res => res.json())\n        .then(res => this.setState({interlocutor: res[0].first_name}))\n        .catch(e => console.error(\"Critical failure: \" + e.message));\n    }\n\n    switchRender = () => {\n\n        const messages = this.state.messages;\n\n        if (this.state.userId === '0') {\n            return <div style = {{backgroundColor: 'rgb(255,255,255,0.5)'}}>\n                <br/><br/><br/>\n                <h2>PROSIMO PRIJAVITE SE V SISTEM!</h2>\n                <br/><br/><br/>\n            </div>\n        }\n        else return <div style = {{backgroundColor: 'rgb(255, 255, 255, 0.8)'}}>\n            <br/>\n            <p style = {{fontSize: '30px'}}>ZGODOVINA POGOVOROV S/Z: <b>{this.state.interlocutor}</b></p>\n            <br/>\n            <ul style = {{display: 'inline-block', maxWidth: '60vw'}}>\n            {messages.map((msg, index) =>\n                <li key={index} style={{listStyleType: 'none', lineHeight: '35px'}}>\n                    {msg.time.substring(8,10)}-{msg.time.substring(6,7)}-{msg.time.substring(0,4)} {msg.time.substring(11,16)}: <b>{msg.sender}</b>: {msg.msg}</li>)}\n            </ul>\n            <NavLink exact to = {'/chatpage/conversation?' + this.interlocutorId()} className = 'btn'>NAZAJ</NavLink>\n        </div>\n\n    }\n\n    render() {\n        return (\n            <div className = 'App'>\n                <UpperLine/>\n                <Header/>\n                <NavBar/>\n                <BreadCrumbs pathname = {'/chatpage/conversation?'+ this.interlocutorId() + '/all?' + this.interlocutorId()}/>\n                {this.switchRender()}\n                <AdSpace/>\n                <Bottom/>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n      loggedInUser: state.loggedInUser,\n      loggedInUserId: state.loggedInUserId\n    };\n};\n\nexport default connect(mapStateToProps) (AllMessages)"]},"metadata":{},"sourceType":"module"}