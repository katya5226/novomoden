{"ast":null,"code":"import React from'react';import{NavLink}from\"react-router-dom\";import*as Constants from'../constants';import'../App.css';var makeSlovene=function makeSlovene(word){var sWord='';for(var i=0;i<Constants.breadCrumbsConsts.length;i++){word===Constants.breadCrumbsConsts[i].value&&(sWord=Constants.breadCrumbsConsts[i].label);if(word.includes('conversation?'))sWord='pogovor';if(word.includes('all?'))sWord='vse';}return sWord;};var BreadCrumbs=function BreadCrumbs(props){var linksplit=props.pathname.substr(1).split('/');var links=new Array(linksplit.length).fill('');for(var i=0;i<linksplit.length;i++){for(var j=0;j<=i;j++){links[i]+='/'+linksplit[j];}}var n=links.length;return/*#__PURE__*/React.createElement(\"div\",{style:{textAlign:'left',padding:'20px',color:'white',textShadow:'1px 1px black'}},/*#__PURE__*/React.createElement(NavLink,{to:\"/\",style:{color:'white',textShadow:'1px 1px black',textDecoration:'none'}},\"domov\"),links.map(function(link,index){if(index!==n-1){return/*#__PURE__*/React.createElement(NavLink,{key:index,to:link,style:{color:'white',textShadow:'1px 1px black',textDecoration:'none'}},\" > \",makeSlovene(linksplit[index]));}else return null;}),\"> \",makeSlovene(linksplit[n-1]));};export default BreadCrumbs;","map":{"version":3,"sources":["/home/katni/APP/client/src/components/BreadCrumbs.jsx"],"names":["React","NavLink","Constants","makeSlovene","word","sWord","i","breadCrumbsConsts","length","value","label","includes","BreadCrumbs","props","linksplit","pathname","substr","split","links","Array","fill","j","n","textAlign","padding","color","textShadow","textDecoration","map","link","index"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,kBAAxB,CACA,MAAO,GAAKC,CAAAA,SAAZ,KAA2B,cAA3B,CACA,MAAO,YAAP,CAGA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,IAAD,CAAU,CAE1B,GAAIC,CAAAA,KAAK,CAAG,EAAZ,CAEA,IAAI,GAAIC,CAAAA,CAAC,CAAC,CAAV,CAAaA,CAAC,CAAGJ,SAAS,CAACK,iBAAV,CAA4BC,MAA7C,CAAqDF,CAAC,EAAtD,CAA0D,CACrDF,IAAI,GAAKF,SAAS,CAACK,iBAAV,CAA4BD,CAA5B,EAA+BG,KAAzC,GAAoDJ,KAAK,CAAGH,SAAS,CAACK,iBAAV,CAA4BD,CAA5B,EAA+BI,KAA3F,EACA,GAAIN,IAAI,CAACO,QAAL,CAAc,eAAd,CAAJ,CAAoCN,KAAK,CAAG,SAAR,CACpC,GAAID,IAAI,CAACO,QAAL,CAAc,MAAd,CAAJ,CAA2BN,KAAK,CAAG,KAAR,CAC9B,CAED,MAAOA,CAAAA,KAAP,CACH,CAXD,CAcA,GAAMO,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAW,CAE3B,GAAIC,CAAAA,SAAS,CAAGD,KAAK,CAACE,QAAN,CAAeC,MAAf,CAAsB,CAAtB,EAAyBC,KAAzB,CAA+B,GAA/B,CAAhB,CAEA,GAAIC,CAAAA,KAAK,CAAG,GAAIC,CAAAA,KAAJ,CAAUL,SAAS,CAACN,MAApB,EAA4BY,IAA5B,CAAiC,EAAjC,CAAZ,CAEA,IAAK,GAAId,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGQ,SAAS,CAACN,MAA9B,CAAsCF,CAAC,EAAvC,CAA2C,CACvC,IAAK,GAAIe,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,EAAIf,CAArB,CAAwBe,CAAC,EAAzB,CAA6B,CACzBH,KAAK,CAACZ,CAAD,CAAL,EAAY,IAAMQ,SAAS,CAACO,CAAD,CAA3B,CACH,CACJ,CAED,GAAIC,CAAAA,CAAC,CAAGJ,KAAK,CAACV,MAAd,CAEA,mBAAO,2BAAK,KAAK,CAAI,CAACe,SAAS,CAAE,MAAZ,CAAoBC,OAAO,CAAE,MAA7B,CAAqCC,KAAK,CAAE,OAA5C,CAAqDC,UAAU,CAAE,eAAjE,CAAd,eACC,oBAAC,OAAD,EAAS,EAAE,CAAG,GAAd,CAAkB,KAAK,CAAI,CAACD,KAAK,CAAE,OAAR,CAAiBC,UAAU,CAAE,eAA7B,CAA8CC,cAAc,CAAE,MAA9D,CAA3B,UADD,CAEET,KAAK,CAACU,GAAN,CAAU,SAACC,IAAD,CAAOC,KAAP,CAAiB,CACpB,GAAIA,KAAK,GAAKR,CAAC,CAAC,CAAhB,CAAmB,CAAC,mBACpB,oBAAC,OAAD,EAAS,GAAG,CAAIQ,KAAhB,CAAuB,EAAE,CAAID,IAA7B,CAAmC,KAAK,CAAI,CAACJ,KAAK,CAAE,OAAR,CAAiBC,UAAU,CAAE,eAA7B,CAA8CC,cAAc,CAAE,MAA9D,CAA5C,QAAuHxB,WAAW,CAACW,SAAS,CAACgB,KAAD,CAAV,CAAlI,CADoB,CAElB,CAFF,IAEQ,OAAO,KAAP,CACf,CAJA,CAFF,MAOI3B,WAAW,CAACW,SAAS,CAACQ,CAAC,CAAC,CAAH,CAAV,CAPf,CAAP,CASH,CAvBD,CAyBA,cAAeV,CAAAA,WAAf","sourcesContent":["import React from 'react'\nimport { NavLink } from \"react-router-dom\"\nimport * as Constants from '../constants';\nimport '../App.css';\n\n\nconst makeSlovene = (word) => {\n\n    let sWord = '';\n    \n    for(let i=0; i < Constants.breadCrumbsConsts.length; i++) {\n        (word === Constants.breadCrumbsConsts[i].value) && (sWord = Constants.breadCrumbsConsts[i].label);\n        if (word.includes('conversation?')) sWord = 'pogovor';\n        if (word.includes('all?')) sWord = 'vse';\n    }\n\n    return sWord;\n}\n\n\nconst BreadCrumbs = (props) => {\n\n    let linksplit = props.pathname.substr(1).split('/');\n\n    let links = new Array(linksplit.length).fill('');\n\n    for (let i = 0; i < linksplit.length; i++) {\n        for (let j = 0; j <= i; j++) {\n            links[i] += '/' + linksplit[j]\n        }\n    }\n\n    let n = links.length;\n\n    return <div style = {{textAlign: 'left', padding: '20px', color: 'white', textShadow: '1px 1px black'}}>\n            <NavLink to = '/' style = {{color: 'white', textShadow: '1px 1px black', textDecoration: 'none'}}>domov</NavLink>\n            {links.map((link, index) => {\n                    if (index !== n-1) {return (\n                    <NavLink key = {index} to = {link} style = {{color: 'white', textShadow: '1px 1px black', textDecoration: 'none'}}> > {makeSlovene(linksplit[index])}</NavLink>\n                    )} else return null\n            })}\n            > {makeSlovene(linksplit[n-1])}\n    </div>\n}\n\nexport default BreadCrumbs"]},"metadata":{},"sourceType":"module"}