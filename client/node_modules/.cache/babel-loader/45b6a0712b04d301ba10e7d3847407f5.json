{"ast":null,"code":"var _jsxFileName = \"/home/katja/REACT/test-app/src/components/BreadCrumbs.jsx\";\nimport React from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport '../App.css';\n\nconst BreadCrumbs = props => {\n  let linksplit = props.pathname.substr(1).split('/');\n  let links = new Array(linksplit.length).fill('');\n\n  for (let i = 0; i < linksplit.length; i++) {\n    for (let j = 0; j <= i; j++) {\n      links[i] += '/' + linksplit[j];\n    }\n  }\n\n  let n = links.length;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: 'left',\n      padding: '20px',\n      color: 'white',\n      textShadow: '1px 1px black'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    to: \"/\",\n    style: {\n      color: 'white',\n      textShadow: '1px 1px black',\n      textDecoration: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, \"Home\"), links.map((link, index) => {\n    if (index !== n - 1) {\n      return /*#__PURE__*/React.createElement(NavLink, {\n        key: index,\n        to: link,\n        style: {\n          color: 'white',\n          textShadow: '1px 1px black',\n          textDecoration: 'none'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }\n      }, \" > \", linksplit[index]);\n    } else return;\n  }), \"> \", linksplit[n - 1]);\n};\n\nexport default BreadCrumbs;","map":{"version":3,"sources":["/home/katja/REACT/test-app/src/components/BreadCrumbs.jsx"],"names":["React","NavLink","BreadCrumbs","props","linksplit","pathname","substr","split","links","Array","length","fill","i","j","n","textAlign","padding","color","textShadow","textDecoration","map","link","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,OAAO,YAAP;;AAGA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAE3B,MAAIC,SAAS,GAAGD,KAAK,CAACE,QAAN,CAAeC,MAAf,CAAsB,CAAtB,EAAyBC,KAAzB,CAA+B,GAA/B,CAAhB;AAEA,MAAIC,KAAK,GAAG,IAAIC,KAAJ,CAAUL,SAAS,CAACM,MAApB,EAA6BC,IAA7B,CAAkC,EAAlC,CAAZ;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,SAAS,CAACM,MAA9B,EAAsCE,CAAC,EAAvC,EAA2C;AACvC,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAID,CAArB,EAAwBC,CAAC,EAAzB,EAA6B;AACzBL,MAAAA,KAAK,CAACI,CAAD,CAAL,IAAY,MAAMR,SAAS,CAACS,CAAD,CAA3B;AACH;AACJ;;AAED,MAAIC,CAAC,GAAGN,KAAK,CAACE,MAAd;AAGA,sBAAO;AAAK,IAAA,KAAK,EAAI;AAACK,MAAAA,SAAS,EAAE,MAAZ;AAAoBC,MAAAA,OAAO,EAAE,MAA7B;AAAqCC,MAAAA,KAAK,EAAE,OAA5C;AAAqDC,MAAAA,UAAU,EAAE;AAAjE,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,OAAD;AAAS,IAAA,EAAE,EAAG,GAAd;AAAkB,IAAA,KAAK,EAAI;AAACD,MAAAA,KAAK,EAAE,OAAR;AAAiBC,MAAAA,UAAU,EAAE,eAA7B;AAA8CC,MAAAA,cAAc,EAAE;AAA9D,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,EAEEX,KAAK,CAACY,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACpB,QAAIA,KAAK,KAAKR,CAAC,GAAC,CAAhB,EAAmB;AAAC,0BACpB,oBAAC,OAAD;AAAS,QAAA,GAAG,EAAIQ,KAAhB;AAAuB,QAAA,EAAE,EAAID,IAA7B;AAAmC,QAAA,KAAK,EAAI;AAACJ,UAAAA,KAAK,EAAE,OAAR;AAAiBC,UAAAA,UAAU,EAAE,eAA7B;AAA8CC,UAAAA,cAAc,EAAE;AAA9D,SAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAuHf,SAAS,CAACkB,KAAD,CAAhI,CADoB;AAElB,KAFF,MAEQ;AACf,GAJA,CAFF,QAOIlB,SAAS,CAACU,CAAC,GAAC,CAAH,CAPb,CAAP;AASH,CAxBD;;AA0BA,eAAeZ,WAAf","sourcesContent":["import React from 'react'\nimport { NavLink } from \"react-router-dom\"\nimport '../App.css';\n\n\nconst BreadCrumbs = (props) => {\n\n    let linksplit = props.pathname.substr(1).split('/');\n\n    let links = new Array(linksplit.length). fill('');\n\n    for (let i = 0; i < linksplit.length; i++) {\n        for (let j = 0; j <= i; j++) {\n            links[i] += '/' + linksplit[j]\n        }\n    }\n\n    let n = links.length;\n\n\n    return <div style = {{textAlign: 'left', padding: '20px', color: 'white', textShadow: '1px 1px black'}}>\n            <NavLink to = '/' style = {{color: 'white', textShadow: '1px 1px black', textDecoration: 'none'}}>Home</NavLink>\n            {links.map((link, index) => {\n                    if (index !== n-1) {return (\n                    <NavLink key = {index} to = {link} style = {{color: 'white', textShadow: '1px 1px black', textDecoration: 'none'}}> > {linksplit[index]}</NavLink>\n                    )} else return\n            })}\n            > {linksplit[n-1]}\n    </div>\n}\n\nexport default BreadCrumbs"]},"metadata":{},"sourceType":"module"}