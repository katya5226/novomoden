{"ast":null,"code":"var _jsxFileName = \"/home/katja/REACT/test-app/src/pages/Chat/ChatPage.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport UpperLine from '../../components/UpperLine';\nimport Header from '../../components/Header';\nimport { NavLink } from 'react-router-dom';\nimport BreadCrumbs from '../../components/BreadCrumbs';\nimport NavBar from '../../components/NavBar';\nimport Bottom from '../../components/Bottom';\nimport AdSpace from '../../components/AdSpace';\nimport '../../App.css';\n\nclass ChatPage extends Component {\n  constructor(props) {\n    super(props);\n    this.abortController = new AbortController();\n\n    this.conversationsFetch = () => {\n      fetch('/fetchconversations', {\n        signal: this.abortController.signal,\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        }\n      }).then(res => res.json()).then(res => {\n        const conversations = res;\n        let unread = [];\n\n        for (let i = 0; i < res.length; i++) unread.push(0);\n\n        const numPages = Math.floor(res.length / this.state.perPage + 0.99);\n        this.setState(state => {\n          return { ...state,\n            conversations,\n            unread,\n            numPages\n          };\n        }, () => {\n          for (let i = 0; i < res.length; i++) {\n            let iLId = 0;\n            res[i].id1.toString() === this.props.loggedInUserId ? iLId = res[i].id2 : iLId = res[i].id1;\n            this.fetchNumberOfUnread(i, iLId);\n          }\n        });\n      }).catch(e => console.error(\"Critical failure: \" + e.message));\n    };\n\n    this.fetchNumberOfUnread = (i, iLId) => {\n      fetch('/fetchunread', {\n        signal: this.abortController.signal,\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify({\n          iLId: iLId\n        })\n      }).then(res => res.json()).then(res => {\n        this.setState(state => {\n          const unread = state.unread.map((num, j) => {\n            if (j === i) {\n              return res;\n            } else return num;\n          });\n          return { ...state,\n            unread\n          };\n        });\n      }).catch(e => console.error(\"Critical failure: \" + e.message));\n    };\n\n    this.paginationButtonClick = e => {\n      let newpage = 1;\n\n      switch (e.target.id) {\n        case 'first':\n          this.setState({\n            page: 1\n          });\n          break;\n\n        case 'previous':\n          this.state.page > 1 ? newpage = this.state.page - 1 : newpage = 1;\n          this.setState({\n            page: newpage\n          });\n          break;\n\n        case 'next':\n          this.state.page < this.state.numPages ? newpage = this.state.page + 1 : newpage = this.state.numPages;\n          this.setState({\n            page: newpage\n          });\n          break;\n\n        case 'last':\n          this.setState({\n            page: this.state.numPages\n          });\n          break;\n\n        default:\n          return null;\n      }\n    };\n\n    this.switchRender = () => {\n      let numConvers = this.state.converstaions.length;\n      let n = this.state.perPage;\n      let p = this.state.page - 1;\n      let till;\n      p * n + n < numConvers ? till = (p + 1) * n : till = numConvers;\n      let conversPortion = this.state.conversations.slice(p * n, till);\n\n      if (this.state.userId === '0') {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            backgroundColor: 'rgb(255,255,255,0.5)'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 20\n          }\n        }, /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }\n        }), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 22\n          }\n        }), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 27\n          }\n        }), /*#__PURE__*/React.createElement(\"h2\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 17\n          }\n        }, \"PROSIMO PRIJAVITE SE V SISTEM!\"), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 17\n          }\n        }), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 22\n          }\n        }), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 27\n          }\n        }));\n      } else return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          backgroundColor: 'rgb(255, 255, 255, 0.5)',\n          textAlign: 'left',\n          paddingLeft: '100px',\n          paddingBottom: '50px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }\n      }, \"POGOVORI:\"), conversPortion.map((conv, index) => {\n        let iLId = 0;\n        let conversant = '';\n        conv.id1 === parseInt(this.props.loggedInUserId) ? iLId = conv.id2 : iLId = conv.id1;\n        conv.conversant1 === this.props.loggedInUser ? conversant = conv.conversant2 : conversant = conv.conversant1;\n        let numunread = '';\n        if (this.state.unread[index]) numunread = '(' + this.state.unread[index] + ')';\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: index,\n          style: {\n            listStyleType: 'none',\n            paddingLeft: '200px',\n            paddingTop: '10px'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 24\n          }\n        }, /*#__PURE__*/React.createElement(NavLink, {\n          style: {\n            color: 'black',\n            textTransform: 'uppercase',\n            fontWeight: 'bold'\n          },\n          exact: true,\n          to: '/chatpage/conversation?' + iLId,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 29\n          }\n        }, conversant + numunread));\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        id: \"first\",\n        className: \"btn_nopad\",\n        onClick: this.paginationButtonClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 17\n        }\n      }, \"PRVA\"), /*#__PURE__*/React.createElement(\"button\", {\n        id: \"previous\",\n        className: \"btn_nopad\",\n        onClick: this.paginationButtonClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 17\n        }\n      }, \"<<\"), /*#__PURE__*/React.createElement(\"button\", {\n        id: \"current\",\n        className: \"btn_nopad\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }\n      }, this.state.page, \"/\", this.state.numPages), /*#__PURE__*/React.createElement(\"button\", {\n        id: \"next\",\n        className: \"btn_nopad\",\n        onClick: this.paginationButtonClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 17\n        }\n      }, \">>\"), /*#__PURE__*/React.createElement(\"button\", {\n        id: \"last\",\n        className: \"btn_nopad\",\n        onClick: this.paginationButtonClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 17\n        }\n      }, \"ZADNJA\")));\n    };\n\n    this.state = {\n      userId: '0',\n      conversations: [],\n      unread: [],\n      perPage: 10,\n      numPages: 1,\n      page: 1\n    };\n  }\n\n  componentDidMount() {\n    fetch('/sessionroutes', {\n      signal: this.abortController.signal\n    }).then(res => res.json()).then(res => this.setState({\n      userId: res.userId\n    })).catch(e => console.error(\"Critical failure: \" + e.message));\n    this.conversationsFetch();\n    this.interval = setInterval(() => {\n      this.conversationsFetch();\n    }, 30000);\n  }\n\n  componentWillUnmount() {\n    this.abortController.abort();\n    clearInterval(this.interval);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(UpperLine, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(NavBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(BreadCrumbs, {\n      pathname: this.props.location.pathname,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 13\n      }\n    }), this.switchRender(), /*#__PURE__*/React.createElement(AdSpace, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Bottom, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    loggedInUser: state.loggedInUser,\n    loggedInUserId: state.loggedInUserId\n  };\n};\n\nexport default connect(mapStateToProps)(ChatPage);","map":{"version":3,"sources":["/home/katja/REACT/test-app/src/pages/Chat/ChatPage.jsx"],"names":["React","Component","connect","UpperLine","Header","NavLink","BreadCrumbs","NavBar","Bottom","AdSpace","ChatPage","constructor","props","abortController","AbortController","conversationsFetch","fetch","signal","method","headers","then","res","json","conversations","unread","i","length","push","numPages","Math","floor","state","perPage","setState","iLId","id1","toString","loggedInUserId","id2","fetchNumberOfUnread","catch","e","console","error","message","body","JSON","stringify","map","num","j","paginationButtonClick","newpage","target","id","page","switchRender","numConvers","converstaions","n","p","till","conversPortion","slice","userId","backgroundColor","textAlign","paddingLeft","paddingBottom","conv","index","conversant","parseInt","conversant1","loggedInUser","conversant2","numunread","listStyleType","paddingTop","color","textTransform","fontWeight","componentDidMount","interval","setInterval","componentWillUnmount","abort","clearInterval","render","location","pathname","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport UpperLine from '../../components/UpperLine';\nimport Header from '../../components/Header';\nimport { NavLink } from 'react-router-dom';\nimport BreadCrumbs from '../../components/BreadCrumbs';\nimport NavBar from '../../components/NavBar';\nimport Bottom from '../../components/Bottom';\nimport AdSpace from '../../components/AdSpace';\nimport '../../App.css';\n\n\nclass ChatPage extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n        this.state = {\n            userId: '0',\n            conversations: [],\n            unread: [],\n            perPage: 10,\n            numPages: 1,\n            page: 1\n        }\n    }\n\n    abortController = new AbortController();\n    componentDidMount() {\n\n        fetch('/sessionroutes', {signal: this.abortController.signal})\n        .then(res => res.json())\n        .then(res => this.setState({userId: res.userId}))\n        .catch(e => console.error(\"Critical failure: \" + e.message));\n\n        this.conversationsFetch();\n        this.interval = setInterval(() => {this.conversationsFetch();}, 30000);\n    }\n\n    componentWillUnmount() {\n        this.abortController.abort();\n        clearInterval(this.interval);\n    }\n\n    conversationsFetch = () => {\n        fetch('/fetchconversations', {\n            signal: this.abortController.signal,\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            }\n        })\n        .then(res => res.json())\n        .then(res => {const conversations = res; let unread = []; for(let i = 0; i < res.length; i++) unread.push(0); const numPages = Math.floor(res.length/this.state.perPage + 0.99);\n            this.setState(state => {return {...state, conversations, unread, numPages}}, () => {for(let i = 0; i < res.length; i++) {\n                let iLId = 0;\n                res[i].id1.toString() === this.props.loggedInUserId ? iLId = res[i].id2 : iLId = res[i].id1;\n                this.fetchNumberOfUnread(i, iLId);\n            }})\n        })\n        .catch(e => console.error(\"Critical failure: \" + e.message));\n    }\n\n    fetchNumberOfUnread = (i, iLId) => {\n        fetch('/fetchunread', {\n            signal: this.abortController.signal,\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            body: JSON.stringify({\n                iLId: iLId\n            })\n        })\n        .then(res => res.json())\n        .then(res => {this.setState(state => {\n                            const unread = state.unread.map((num, j) => {if (j === i) {return res;} else return num;});\n                            return ({...state, unread});\n                        });                    \n        })\n        .catch(e => console.error(\"Critical failure: \" + e.message));\n    }\n\n    paginationButtonClick = (e) => {\n        let newpage = 1;\n        switch(e.target.id) {\n            case 'first':\n                this.setState({page: 1});\n                break;\n            case 'previous':\n                this.state.page > 1 ? newpage = this.state.page-1 : newpage = 1;\n                this.setState({page: newpage});\n                break;\n            case 'next':\n                this.state.page < this.state.numPages ? newpage = this.state.page+1 : newpage = this.state.numPages;\n                this.setState({page: newpage});\n                break;\n            case 'last':\n                this.setState({page: this.state.numPages});\n                break;\n            default:\n                return null;\n        }\n    }\n\n    switchRender = () => {\n\n        let numConvers = this.state.converstaions.length;\n        let n = this.state.perPage;\n        let p = this.state.page - 1;\n        let till;\n        p*n + n < numConvers ? till = (p+1)*n : till = numConvers;\n        let conversPortion = this.state.conversations.slice(p*n, till);\n\n        if (this.state.userId === '0') {\n            return <div style = {{backgroundColor: 'rgb(255,255,255,0.5)'}}>\n                <br/><br/><br/>\n                <h2>PROSIMO PRIJAVITE SE V SISTEM!</h2>\n                <br/><br/><br/>\n            </div>\n        }\n        else return <div style = {{backgroundColor: 'rgb(255, 255, 255, 0.5)', textAlign: 'left', paddingLeft: '100px', paddingBottom: '50px'}}>\n            <br/>\n            <h2>POGOVORI:</h2>\n            {conversPortion.map((conv, index) => {\n                let iLId = 0;\n                let conversant = '';\n                conv.id1 === parseInt(this.props.loggedInUserId) ? iLId = conv.id2 : iLId = conv.id1;\n                conv.conversant1 === this.props.loggedInUser ? conversant = conv.conversant2 : conversant = conv.conversant1;\n                let numunread = '';\n                if(this.state.unread[index]) numunread = '(' + this.state.unread[index] + ')';\n                return <li key = {index} style = {{listStyleType: 'none', paddingLeft: '200px', paddingTop: '10px'}}>\n                            <NavLink\n                                style = {{color: 'black', textTransform: 'uppercase', fontWeight: 'bold'}}\n                                exact to = {'/chatpage/conversation?' + iLId}>{conversant + numunread}\n                            </NavLink>\n                        </li>\n            })}\n            <div>\n                <button id='first' className='btn_nopad' onClick={this.paginationButtonClick}>PRVA</button>\n                <button id='previous' className='btn_nopad' onClick={this.paginationButtonClick}>&#60;&#60;</button>\n                <button id='current' className='btn_nopad'>{this.state.page}/{this.state.numPages}</button>\n                <button id='next' className='btn_nopad' onClick={this.paginationButtonClick}>&#62;&#62;</button>\n                <button id='last' className='btn_nopad' onClick={this.paginationButtonClick}>ZADNJA</button>\n            </div>\n        </div>\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n            <UpperLine/>\n            <Header/>\n            <NavBar/>\n            <BreadCrumbs pathname = {this.props.location.pathname}/>\n            {this.switchRender()}\n            <AdSpace/>\n            <Bottom/>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n      loggedInUser: state.loggedInUser,\n      loggedInUserId: state.loggedInUserId\n    };\n};\n\nexport default connect(mapStateToProps) (ChatPage)"]},"metadata":{},"sourceType":"module"}