{"ast":null,"code":"var _jsxFileName = \"/home/katja/REACT/test-app/src/pages/SignUpPage.jsx\";\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport ClipLoader from 'react-spinners/ClipLoader';\nimport SignUpForm from '../components/SignUpForm';\nimport Header from '../components/Header';\nimport UpperLine from '../components/UpperLine';\nimport BreadCrumbs from '../components/BreadCrumbs';\nimport '../App.css';\n\nclass SignUpPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.abortController = new AbortController();\n\n    this.handleClickSignUp = e => {\n      e.preventDefault();\n      console.log(this.state);\n      this.setState({\n        loading: true\n      });\n\n      if (this.state.firstName !== '' && this.state.lastName !== '' && this.state.street !== '' && this.state.postNumber !== null && this.state.town !== '' && this.state.region !== '' && this.state.country !== '' && this.state.birthday !== '' && this.state.nationality !== '' && this.state.countryOfResidence !== '' && this.state.phoneNumber !== '' && this.state.email !== '' && this.state.password !== '' && this.state.warning === '') {\n        fetch('/signuproutes', {\n          signal: this.abortController.signal,\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n          },\n          body: JSON.stringify({\n            enjoyer: {\n              firstName: this.state.firstName,\n              lastName: this.state.lastName,\n              street: this.state.street,\n              postNumber: this.state.postNumber,\n              town: this.state.town,\n              region: this.state.region,\n              country: this.state.country,\n              birthday: this.state.birthday,\n              nationality: this.state.nationality,\n              countryOfResidence: this.state.countryOfResidence,\n              phoneNumber: this.state.phoneNumber,\n              email: this.state.email,\n              password: this.state.password\n            }\n          })\n        }).then(res => res.json()).then(result => this.setState({\n          signUpText: result.signUpSuccess,\n          loading: false\n        }));\n      } else {\n        this.setState({\n          signUpText: 'Napaka pri vnosu',\n          loading: false\n        });\n      }\n\n      this.setState({\n        firstName: '',\n        lastName: '',\n        street: '',\n        postNumber: null,\n        town: '',\n        region: '',\n        country: '',\n        birthday: '',\n        nationality: '',\n        countryOfResidence: '',\n        phoneNumber: '',\n        email: '',\n        password: ''\n      });\n    };\n\n    this.changePhoneNumber = values => {\n      const {\n        value\n      } = values;\n      this.setState({\n        phoneNumber: value\n      });\n    };\n\n    this.changePostNumber = values => {\n      const {\n        value\n      } = values;\n      this.setState({\n        postNumber: value\n      });\n    };\n\n    this.changeBirthday = values => {\n      const {\n        value\n      } = values;\n      this.setState({\n        birthday: value\n      });\n    };\n\n    this.state = {\n      loggedInUserId: 0,\n      firstName: '',\n      lastName: '',\n      street: '',\n      postNumber: null,\n      town: '',\n      region: '',\n      country: '',\n      birthday: '',\n      nationality: '',\n      countryOfResidence: '',\n      phoneNumber: '',\n      email: '',\n      password: '',\n      signUpText: '',\n      warning: '',\n      loading: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClickSignUp = this.handleClickSignUp.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      loggedInUserId: this.props.loggedInUserId\n    });\n  }\n\n  componentWillUnmount() {\n    this.abortController.abort();\n  }\n\n  checkPassStrength(pass) {\n    const mediumRegex = new RegExp(\"^(((?=.*[a-z])(?=.*[A-Z]))|((?=.*[a-z])(?=.*[0-9]))|((?=.*[A-Z])(?=.*[0-9])))(?=.{8,})\");\n    return mediumRegex.test(pass);\n  }\n\n  handleChange(event) {\n    if (event.target.name === 'password') {\n      if (!this.checkPassStrength(event.target.value)) {\n        this.setState({\n          warning: 'Geslo mora biti dolgo vsaj 8 znakov in mora vsebovati vsaj dva od naslednjih znakov: mala črka, velika črka, številka.'\n        });\n      } else {\n        this.setState({\n          warning: ''\n        });\n      }\n    }\n\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  render() {\n    if (this.state.loggedInUserId) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 20\n        }\n      }, /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          backgroundColor: 'white'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 25\n        }\n      }, \"STE \\u017DE PRIJAVLJENI V SISTEM!\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(NavLink, {\n        exact: true,\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 25\n        }\n      }, \"DOMOV\"));\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(UpperLine, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(BreadCrumbs, {\n      pathname: this.props.location.pathname,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"SignUp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }\n    }, \"DOBRODO\\u0160LI!\"), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 21\n      }\n    }, \"Nekaj napotkov:\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 21\n      }\n    }, \"\\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\\\"\"), /*#__PURE__*/React.createElement(SignUpForm, {\n      firstName: this.state.firstName,\n      lastName: this.state.lastName,\n      email: this.state.email,\n      street: this.state.street,\n      postNumber: this.state.postNumber,\n      town: this.state.town,\n      region: this.state.region,\n      country: this.state.country,\n      birthday: this.state.birthday,\n      nationality: this.state.nationality,\n      countryOfResidence: this.state.countryOfResidence,\n      phoneNumber: this.state.phoneNumber,\n      password: this.state.password,\n      handleChange: this.handleChange,\n      changePhoneNumber: this.changePhoneNumber,\n      changePostNumber: this.changePostNumber,\n      handleClickSignUp: this.handleClickSignUp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundColor: 'rgb(255, 255, 255, 0.8)'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: 'red',\n        lineHeight: '40px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 25\n      }\n    }, this.state.warning), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: 'black',\n        lineHeight: '40px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 25\n      }\n    }, this.state.signUpText)), /*#__PURE__*/React.createElement(ClipLoader, {\n      size: 50,\n      color: 'white',\n      loading: this.state.loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    loggedInUser: state.loggedInUser,\n    loggedInUserId: state.loggedInUserId\n  };\n};\n\nexport default connect(mapStateToProps)(SignUpPage);","map":{"version":3,"sources":["/home/katja/REACT/test-app/src/pages/SignUpPage.jsx"],"names":["React","NavLink","connect","ClipLoader","SignUpForm","Header","UpperLine","BreadCrumbs","SignUpPage","Component","constructor","props","abortController","AbortController","handleClickSignUp","e","preventDefault","console","log","state","setState","loading","firstName","lastName","street","postNumber","town","region","country","birthday","nationality","countryOfResidence","phoneNumber","email","password","warning","fetch","signal","method","headers","body","JSON","stringify","enjoyer","then","res","json","result","signUpText","signUpSuccess","changePhoneNumber","values","value","changePostNumber","changeBirthday","loggedInUserId","handleChange","bind","componentDidMount","componentWillUnmount","abort","checkPassStrength","pass","mediumRegex","RegExp","test","event","target","name","render","backgroundColor","location","pathname","color","lineHeight","mapStateToProps","loggedInUser"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport ClipLoader from 'react-spinners/ClipLoader';\nimport SignUpForm from '../components/SignUpForm';\nimport Header from '../components/Header';\nimport UpperLine from '../components/UpperLine';\nimport BreadCrumbs from '../components/BreadCrumbs';\nimport '../App.css';\n\nclass SignUpPage extends React.Component {\n\n    constructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n            loggedInUserId: 0,\n\t\t\tfirstName: '',\n            lastName: '',\n            street: '',\n            postNumber: null,\n            town: '',\n            region: '',\n            country: '',\n            birthday: '',\n            nationality: '',\n            countryOfResidence: '',\n            phoneNumber: '',\n\t\t\temail: '',\n            password: '',\n            signUpText: '',\n            warning: '',\n            loading: false\n\t\t};\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t\tthis.handleClickSignUp = this.handleClickSignUp.bind(this);\n    }\n\n    abortController = new AbortController();\n\n    componentDidMount() {\n        this.setState({loggedInUserId: this.props.loggedInUserId});\n    }\n    \n    handleClickSignUp = (e) => {\n        e.preventDefault();\n\n        console.log(this.state);\n\n        this.setState({loading: true});\n\t\tif(this.state.firstName !== '' &&\n            this.state.lastName !== '' &&\n            this.state.street !== '' &&\n            this.state.postNumber !== null &&\n            this.state.town !== '' &&\n            this.state.region !== '' &&\n            this.state.country !== '' &&\n            this.state.birthday !== '' &&\n            this.state.nationality !== '' &&\n            this.state.countryOfResidence !== '' &&\n            this.state.phoneNumber !== '' &&\n\t\t\tthis.state.email !== '' &&\n            this.state.password !== '' &&\n            this.state.warning === '') {\n\n\t\t\t\tfetch('/signuproutes', {\n                    signal: this.abortController.signal,\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t\t'Accept': 'application/json'\n\t\t\t\t\t},\n\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\tenjoyer: {\n\t\t\t\t\t\t\tfirstName: this.state.firstName,\n                            lastName: this.state.lastName,\n                            street: this.state.street,\n                            postNumber: this.state.postNumber,\n                            town: this.state.town,\n                            region: this.state.region,\n                            country: this.state.country,\n                            birthday: this.state.birthday,\n                            nationality: this.state.nationality,\n                            countryOfResidence: this.state.countryOfResidence,\n                            phoneNumber: this.state.phoneNumber,\n\t\t\t\t\t\t\temail: this.state.email,\n\t\t\t\t\t\t\tpassword: this.state.password\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}).then(res => res.json())\n\t\t\t\t\t.then(result => this.setState({signUpText: result.signUpSuccess, loading: false}));\n        }else {this.setState({signUpText: 'Napaka pri vnosu', loading: false})}\n        this.setState({\n            firstName:'',\n            lastName:'',\n            street: '',\n            postNumber: null,\n            town: '',\n            region: '',\n            country: '',\n            birthday: '',\n            nationality: '',\n            countryOfResidence: '',\n            phoneNumber: '',\n\t\t\temail:'',\n\t\t\tpassword:''\n        });\n    }\n\n    componentWillUnmount() {\n        this.abortController.abort();\n    }\n    \n\n    checkPassStrength(pass) {\n        const mediumRegex = new RegExp(\"^(((?=.*[a-z])(?=.*[A-Z]))|((?=.*[a-z])(?=.*[0-9]))|((?=.*[A-Z])(?=.*[0-9])))(?=.{8,})\");\n        return mediumRegex.test(pass);\n    }\n\n\n    handleChange(event) {\n\n        if(event.target.name === 'password') {\n            if(!this.checkPassStrength(event.target.value)){\n                this.setState({\n                    warning: 'Geslo mora biti dolgo vsaj 8 znakov in mora vsebovati vsaj dva od naslednjih znakov: mala črka, velika črka, številka.'\n                });\n            } else {\n                this.setState({warning: ''});\n            }\n        }\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n\n    }\n    changePhoneNumber = (values) => {\n        const {value} = values;\n        this.setState({phoneNumber: value});\n    }\n    \n    changePostNumber = (values) => {\n        const {value} = values;\n        this.setState({postNumber: value});\n    }\n\n    changeBirthday = (values) => {\n        const {value} = values;\n        this.setState({birthday: value});\n    }\n\n    render() {\n        if(this.state.loggedInUserId) {\n            return <div>\n                        <br/>\n                        <p style = {{backgroundColor: 'white'}}>STE ŽE PRIJAVLJENI V SISTEM!</p>\n                        <br/>\n                        <NavLink exact to='/'>DOMOV</NavLink>\n                    </div>\n        }\n        return (\n            <>\n                <UpperLine/>\n                <Header/>\n                <BreadCrumbs pathname = {this.props.location.pathname}/>\n                <div className='SignUp'>\n                    <h1>DOBRODOŠLI!</h1>\n                    <h2>Nekaj napotkov:</h2>\n                    <p>\"Lorem ipsum dolor sit amet, \n                        consectetur adipiscing elit, \n                        sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. \n                        Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris\n                        nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in\n                        reprehenderit in voluptate velit esse cillum dolore eu fugiat \n                        nulla pariatur. Excepteur sint occaecat cupidatat non proident, \n                        sunt in culpa qui officia deserunt mollit anim id est laborum.\"</p>\n                    <SignUpForm\n                        firstName={this.state.firstName}\n                        lastName={this.state.lastName}\n                        email={this.state.email}\n                        street={this.state.street}\n                        postNumber={this.state.postNumber}\n                        town={this.state.town}\n                        region={this.state.region}\n                        country={this.state.country}\n                        birthday={this.state.birthday}\n                        nationality={this.state.nationality}\n                        countryOfResidence={this.state.countryOfResidence}\n                        phoneNumber={this.state.phoneNumber}\n                        password={this.state.password}\n                        handleChange={this.handleChange}\n                        changePhoneNumber={this.changePhoneNumber}\n                        changePostNumber={this.changePostNumber}\n                        handleClickSignUp={this.handleClickSignUp}/>\n                    <div style = {{backgroundColor: 'rgb(255, 255, 255, 0.8)'}}>\n                        <p style = {{color: 'red', lineHeight: '40px'}}>{this.state.warning}</p>\n                        <p style = {{color: 'black', lineHeight: '40px'}}>{this.state.signUpText}</p>\n                    </div>\n                    <ClipLoader\n                        size={50}\n                        color={'white'}\n                        loading={this.state.loading}\n                    />\n                </div>\n            </>\n\n        );\n\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n      loggedInUser: state.loggedInUser,\n      loggedInUserId: state.loggedInUserId\n    };\n  };\n\nexport default connect(mapStateToProps) (SignUpPage);"]},"metadata":{},"sourceType":"module"}