{"ast":null,"code":"import{LOG_IN,LOG_OUT,SAVE_ATT}from'./actions';var initialState={loggedInUser:'guest',loggedInUserId:0,saveAttempt:false,cartUpdate:false,page:1};function rootReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case LOG_IN:return{loggedInUser:action.name,loggedInUserId:action.uid};case LOG_OUT:return{loggedInUser:'guest',loggedInUserId:0};case SAVE_ATT:return{saveAttempt:action.att};/*case ADD_TO_CART:\n        //updatedCart = state.cart.push(action.id);\n        return{\n            cart: [...initialState.cart, action.id]\n        }\n    case REMOVE_FROM_CART:\n        let updatedCart = initialState.cart.splice(state.cart.indexOf(action.id), 1 );\n        return{\n            cart: updatedCart\n        }\n    case UPDATE_CART:\n        return{\n            cart: action.items\n        }\n    case ADD_TO_ORDER:\n        //updatedCart = state.cart.push(action.id);\n        return{ order: action.id };*/default:return initialState;};}export default rootReducer;","map":{"version":3,"sources":["/home/katni/REACT/test-app/src/redux/reducers.js"],"names":["LOG_IN","LOG_OUT","SAVE_ATT","initialState","loggedInUser","loggedInUserId","saveAttempt","cartUpdate","page","rootReducer","state","action","type","name","uid","att"],"mappings":"AAAA,OAASA,MAAT,CACQC,OADR,CAEQC,QAFR,KAEwB,WAFxB,CAKA,GAAMC,CAAAA,YAAY,CAAG,CACjBC,YAAY,CAAE,OADG,CAEjBC,cAAc,CAAE,CAFC,CAGjBC,WAAW,CAAE,KAHI,CAIjBC,UAAU,CAAE,KAJK,CAKjBC,IAAI,CAAE,CALW,CAArB,CAQA,QAASC,CAAAA,WAAT,EAAmD,IAA9BC,CAAAA,KAA8B,2DAAtBP,YAAsB,IAARQ,CAAAA,MAAQ,2CAEjD,OAAOA,MAAM,CAACC,IAAd,EACE,IAAKZ,CAAAA,MAAL,CACE,MAAO,CAAEI,YAAY,CAAEO,MAAM,CAACE,IAAvB,CAA6BR,cAAc,CAAEM,MAAM,CAACG,GAApD,CAAP,CAEF,IAAKb,CAAAA,OAAL,CACE,MAAO,CAAEG,YAAY,CAAE,OAAhB,CAAyBC,cAAc,CAAE,CAAzC,CAAP,CAEF,IAAKH,CAAAA,QAAL,CACI,MAAO,CAAEI,WAAW,CAAEK,MAAM,CAACI,GAAtB,CAAP,CAEJ;;;;;;;;;;;;;;;;qCAkBA,QACE,MAAOZ,CAAAA,YAAP,CA7BJ,CA8BC,CACF,CAED,cAAeM,CAAAA,WAAf","sourcesContent":["import { LOG_IN,\n        LOG_OUT,\n        SAVE_ATT } from './actions';\n\n\nconst initialState = {\n    loggedInUser: 'guest',\n    loggedInUserId: 0,\n    saveAttempt: false,\n    cartUpdate: false,\n    page: 1\n};\n\nfunction rootReducer(state = initialState, action) {\n\n  switch(action.type) {\n    case LOG_IN:\n      return { loggedInUser: action.name, loggedInUserId: action.uid };\n\n    case LOG_OUT:\n      return { loggedInUser: 'guest', loggedInUserId: 0 };\n\n    case SAVE_ATT:\n        return { saveAttempt: action.att };\n    \n    /*case ADD_TO_CART:\n        //updatedCart = state.cart.push(action.id);\n        return{\n            cart: [...initialState.cart, action.id]\n        }\n    case REMOVE_FROM_CART:\n        let updatedCart = initialState.cart.splice(state.cart.indexOf(action.id), 1 );\n        return{\n            cart: updatedCart\n        }\n    case UPDATE_CART:\n        return{\n            cart: action.items\n        }\n    case ADD_TO_ORDER:\n        //updatedCart = state.cart.push(action.id);\n        return{ order: action.id };*/\n\n    default:\n      return initialState;\n  };\n}\n\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}