{"ast":null,"code":"var _jsxFileName = \"/home/katni/REACT/test-app/src/pages/UserPage/PastOrders.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport Popup from 'reactjs-popup';\nimport UpperLine from '../../components/UpperLine';\nimport Header from '../../components/Header';\nimport NavBar from '../../components/NavBar';\nimport UserSideBar from './UserSideBar';\nimport Bottom from '../../components/Bottom';\nimport BreadCrumbs from '../../components/BreadCrumbs';\nimport AdSpace from '../../components/AdSpace';\nimport '../../App.css';\n\nclass PastOrders extends React.Component {\n  constructor(props) {\n    super(props);\n    this.abortController = new AbortController();\n\n    this.confirmGoodsReceived = id => {\n      //const orders = this.state.orders.map((order) => {if(order.order_id === id) order.status = 2})\n      this.callBackEnd('/orderstatus', id, 2);\n      window.location.href = '/user_pastorders'; //let orders = this.state.orders.map(order => {if(order.order_id === id) order.status=2})\n      //console.log(this.state.orders[0].order_id)\n      //const orders = this.state.orders.map((order) => {if(order.order_id === id) order.status = 2})\n      //this.setState(state => {const orders = state.orders.map(order => {if(order.order_id === id) order.status=2}); return({...state, orders})});\n    };\n\n    this.callBackEnd = (backendPath, id, newStatus) => {\n      fetch(backendPath, {\n        signal: this.abortController.signal,\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify({\n          orderId: id,\n          newStatus: newStatus\n        })\n      }).then(this.setState({\n        confirmReceived: 0,\n        openDispute: 0\n      }, () => {\n        this.fetchOrders();\n      })).catch(e => console.error(\"Critical failure: \" + e.message));\n    };\n\n    this.fetchOrders = () => {\n      fetch('/userorders', {\n        signal: this.abortController.signal,\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        }\n      }).then(res => res.json()).then(orders => this.setState({\n        orders: orders,\n        numPages: Math.floor(orders.length / this.state.perPage + 0.99)\n      })).catch(e => console.error(\"Critical failure: \" + e.message));\n      this.setState({\n        confirmReceived: 0,\n        openDispute: 0\n      });\n    };\n\n    this.openDispute = id => {\n      // this.callBackEnd('/orderstatus', id, 3);\n      // this.callBackEnd('/userorders', 0, 0);\n      window.location.href = '/contentsupport?3';\n    };\n\n    this.cancelConfirm = () => {\n      this.setState({\n        confirmReceived: 0,\n        openDispute: 0\n      });\n    };\n\n    this.formatDate = date => {\n      var d = new Date(date * 1000),\n          month = '' + (d.getMonth() + 1),\n          day = '' + d.getDate(),\n          year = d.getFullYear();\n      if (month.length < 2) month = '0' + month;\n      if (day.length < 2) day = '0' + day;\n      return [day, month, year].join('-');\n    };\n\n    this.paginationButtonClick = e => {\n      let newpage = 1;\n\n      switch (e.target.id) {\n        case 'first':\n          this.setState({\n            page: 1\n          });\n          break;\n\n        case 'previous':\n          this.state.page > 1 ? newpage = this.state.page - 1 : newpage = 1;\n          this.setState({\n            page: newpage\n          });\n          break;\n\n        case 'next':\n          this.state.page < this.state.numPages ? newpage = this.state.page + 1 : newpage = this.state.numPages;\n          this.setState({\n            page: newpage\n          });\n          break;\n\n        case 'last':\n          this.setState({\n            page: this.state.numPages\n          });\n          break;\n\n        default:\n          return null;\n      }\n    };\n\n    this.mapOrders = () => {\n      let numOrders = this.state.orders.length;\n      let n = this.state.perPage;\n      let p = this.state.page - 1;\n      let till;\n      p * n + n < numOrders ? till = (p + 1) * n : till = numOrders;\n      let ordersPortion = this.state.orders.slice(p * n, till);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"orderListWrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }\n      }, ordersPortion.map(order => /*#__PURE__*/React.createElement(\"li\", {\n        key: order.order_id,\n        style: {\n          listStyleType: \"none\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 17\n        }\n      }, \"\\u0160tevilka naro\\u010Dila: \", /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          fontWeight: 'bold'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 40\n        }\n      }, \" \", order.order_id, \" \"), \"Datum naro\\u010Dila:  \", /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          fontWeight: 'bold'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 38\n        }\n      }, this.formatDate(order.date_modified), \" \"), \"Cena:  \", /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          fontWeight: 'bold'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 28\n        }\n      }, order.price, \" \\u20AC \"), \"Po\\u0161tnina:  \", /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          fontWeight: 'bold'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 32\n        }\n      }, order.postage, \" \\u20AC \"), \"Prodajalec: \", /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          fontWeight: 'bold'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 33\n        }\n      }, order.seller, \" \"), \"Izdelki: \", order.ad_ids.split(',').map(id => /*#__PURE__*/React.createElement(NavLink, {\n        to: \"/item?\" + id,\n        key: id,\n        className: \"btn_nopad\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 65\n        }\n      }, id)), order.status === 1 && /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 44\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 47\n        }\n      }, \"Naro\\u010Dilo je odposlano.\")), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }\n      }), order.status === 1 && /*#__PURE__*/React.createElement(\"button\", {\n        className: ['btn_nopad', 'btn_marg', 'btn_blue'].join(\" \"),\n        onClick: () => this.setState({\n          confirmReceived: order.order_id\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 44\n        }\n      }, \"POTRDI PREJEM\"), (order.status === 0 || order.status === 1) && /*#__PURE__*/React.createElement(NavLink, {\n        className: ['btn_nopad', 'btn_marg', 'btn_lightyellow'].join(\" \"),\n        to: '/chatpage/conversation?' + order.seller_id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 68\n        }\n      }, \"KONTAKTIRAJ PRODAJALCA\"), (order.status === 0 || order.status === 1) && order.dispute === 0 && /*#__PURE__*/React.createElement(\"button\", {\n        className: ['btn_nopad', 'btn_marg', 'btn_yellow'].join(\" \"),\n        onClick: () => this.setState({\n          openDispute: order.order_id\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 93\n        }\n      }, \"ODPRI PRITO\\u017DBO\"), order.dispute === 1 && /*#__PURE__*/React.createElement(\"button\", {\n        className: ['btn_nopad', 'btn_marg', 'btn_red', 'btn_nocursor'].join(\" \"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 45\n        }\n      }, \"ODPRTA PRITO\\u017DBA\"), order.status === 2 && /*#__PURE__*/React.createElement(\"button\", {\n        className: ['btn_nopad', 'btn_marg', 'btn_green', 'btn_nocursor'].join(\" \"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 44\n        }\n      }, \"ZAKLJU\\u010CENO\"), order.status === 4 && /*#__PURE__*/React.createElement(\"button\", {\n        className: ['btn_nopad', 'btn_marg', 'btn_red', 'btn_nocursor'].join(\" \"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 44\n        }\n      }, \"PREKLICANO\"))), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        id: \"first\",\n        className: \"btn_nopad\",\n        onClick: this.paginationButtonClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }\n      }, \"PRVA\"), /*#__PURE__*/React.createElement(\"button\", {\n        id: \"previous\",\n        className: \"btn_nopad\",\n        onClick: this.paginationButtonClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }\n      }, \"<<\"), /*#__PURE__*/React.createElement(\"button\", {\n        id: \"current\",\n        className: \"btn_nopad\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }\n      }, this.state.page, \"/\", this.state.numPages), /*#__PURE__*/React.createElement(\"button\", {\n        id: \"next\",\n        className: \"btn_nopad\",\n        onClick: this.paginationButtonClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }\n      }, \">>\"), /*#__PURE__*/React.createElement(\"button\", {\n        id: \"last\",\n        className: \"btn_nopad\",\n        onClick: this.paginationButtonClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }\n      }, \"ZADNJA\")));\n    };\n\n    this.switchRender = () => {\n      if (this.state.userId === '0') {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            backgroundColor: 'rgb(255,255,255,0.5)'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 21\n          }\n        }), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 26\n          }\n        }), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 31\n          }\n        }), /*#__PURE__*/React.createElement(\"h2\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 21\n          }\n        }, \"PROSIMO PRIJAVITE SE V SISTEM!\"), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 21\n          }\n        }), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 26\n          }\n        }), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 31\n          }\n        }));\n      } else if (!this.state.orders.length) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"h2\", {\n          style: {\n            color: 'white'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 26\n          }\n        }, \"NI\\u010CESAR \\u0160E NISTE NARO\\u010CILI.\"));\n      } else if (this.state.confirmReceived || this.state.openDispute) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"userContainer\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 21\n          }\n        }), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 21\n          }\n        }), this.mapOrders(), /*#__PURE__*/React.createElement(Popup, {\n          open: true,\n          position: \"center center\",\n          onClose: this.closeModal,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            display: 'inline-flex',\n            justifyContent: 'space-around'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 25\n          }\n        }, this.state.confirmReceived ? /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: 'auto 10px'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 59\n          }\n        }, \"S potrditvijo bo naro\\u010Dilo zaklju\\u010Deno in prito\\u017Eba ne bo ve\\u010D mo\\u017Ena. Ali ste prepri\\u010Dani, da \\u017Eelite potrditi prejem izdelkov?\") : null, this.state.confirmReceived ? /*#__PURE__*/React.createElement(\"button\", {\n          className: \"btnb\",\n          onClick: () => this.confirmGoodsReceived(this.state.confirmReceived),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 59\n          }\n        }, \"DA\") : null, this.state.openDispute ? /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: 'auto 10px'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 55\n          }\n        }, \"Prito\\u017Ebo podajte le, \\u010De ste \\u017Ee kontaktirali prodajalca in niste pri\\u0161li do sporazumne re\\u0161itve. \\u017Delite nadaljevati?\") : null, this.state.openDispute ? /*#__PURE__*/React.createElement(\"button\", {\n          className: \"btnb\",\n          onClick: () => this.openDispute(this.state.openDispute),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 55\n          }\n        }, \"DA\") : null, /*#__PURE__*/React.createElement(\"button\", {\n          className: \"btnb\",\n          onClick: this.cancelConfirm,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 29\n          }\n        }, \"NE\"))));\n      } else return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"userContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }\n      }), this.mapOrders());\n    };\n\n    this.state = {\n      userId: '0',\n      orders: [],\n      confirmReceived: 0,\n      openDispute: 0,\n      perPage: 10,\n      numPages: 1,\n      page: 1\n    };\n  }\n\n  componentDidMount() {\n    fetch('/sessionroutes', {\n      signal: this.abortController.signal\n    }).then(res => res.json()).then(res => this.setState({\n      userId: res.userId\n    })).catch(e => console.error(\"Critical failure: \" + e.message));\n    this.callBackEnd('/userorders', 0, 0);\n  }\n\n  componentWillUnmount() {\n    this.abortController.abort();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(UpperLine, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(NavBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(BreadCrumbs, {\n      pathname: this.props.location.pathname,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(UserSideBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 13\n      }\n    }), this.switchRender(), /*#__PURE__*/React.createElement(AdSpace, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Bottom, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    loggedInUser: state.loggedInUser,\n    loggedInUserId: state.loggedInUserId\n  };\n};\n\nexport default connect(mapStateToProps)(PastOrders);","map":{"version":3,"sources":["/home/katni/REACT/test-app/src/pages/UserPage/PastOrders.jsx"],"names":["React","connect","NavLink","Popup","UpperLine","Header","NavBar","UserSideBar","Bottom","BreadCrumbs","AdSpace","PastOrders","Component","constructor","props","abortController","AbortController","confirmGoodsReceived","id","callBackEnd","window","location","href","backendPath","newStatus","fetch","signal","method","headers","body","JSON","stringify","orderId","then","setState","confirmReceived","openDispute","fetchOrders","catch","e","console","error","message","res","json","orders","numPages","Math","floor","length","state","perPage","cancelConfirm","formatDate","date","d","Date","month","getMonth","day","getDate","year","getFullYear","join","paginationButtonClick","newpage","target","page","mapOrders","numOrders","n","p","till","ordersPortion","slice","map","order","order_id","listStyleType","fontWeight","date_modified","price","postage","seller","ad_ids","split","status","seller_id","dispute","switchRender","userId","backgroundColor","color","closeModal","display","justifyContent","margin","componentDidMount","componentWillUnmount","abort","render","pathname","mapStateToProps","loggedInUser","loggedInUserId"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport Popup from 'reactjs-popup';\nimport UpperLine from '../../components/UpperLine';\nimport Header from '../../components/Header';\nimport NavBar from '../../components/NavBar';\nimport UserSideBar from './UserSideBar';\nimport Bottom from '../../components/Bottom';\nimport BreadCrumbs from '../../components/BreadCrumbs';\nimport AdSpace from '../../components/AdSpace';\nimport '../../App.css';\n\n\nclass PastOrders extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n            userId: '0',\n            orders: [],\n            confirmReceived: 0,\n            openDispute: 0,\n            perPage: 10,\n            numPages: 1,\n            page: 1\n        };\n    }\n\n    abortController = new AbortController();\n\tcomponentDidMount() {\n        fetch('/sessionroutes', {signal: this.abortController.signal})\n        .then(res => res.json())\n        .then(res => this.setState({userId: res.userId}))\n        .catch(e => console.error(\"Critical failure: \" + e.message));\n\n        this.callBackEnd('/userorders', 0, 0);\n    }\n\n    componentWillUnmount() {\n        this.abortController.abort();\n    }\n\n    confirmGoodsReceived = (id) => {\n        //const orders = this.state.orders.map((order) => {if(order.order_id === id) order.status = 2})\n        this.callBackEnd('/orderstatus', id, 2);\n        window.location.href = '/user_pastorders';\n        //let orders = this.state.orders.map(order => {if(order.order_id === id) order.status=2})\n        //console.log(this.state.orders[0].order_id)\n        //const orders = this.state.orders.map((order) => {if(order.order_id === id) order.status = 2})\n        //this.setState(state => {const orders = state.orders.map(order => {if(order.order_id === id) order.status=2}); return({...state, orders})});\n    }\n\n    callBackEnd = (backendPath, id, newStatus) => {\n        fetch(backendPath, {\n            signal: this.abortController.signal,\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            body: JSON.stringify({\n                orderId: id,\n                newStatus: newStatus\n            })\n        })\n        .then(this.setState({confirmReceived: 0, openDispute: 0}, () => {this.fetchOrders();}))\n        .catch(e => console.error(\"Critical failure: \" + e.message));\n    }\n\n    fetchOrders = () => {\n        fetch('/userorders', {\n            signal: this.abortController.signal,\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            }\n        })\n        .then(res => res.json())\n        .then(orders => this.setState({orders: orders, numPages: Math.floor(orders.length/this.state.perPage + 0.99)}))\n        .catch(e => console.error(\"Critical failure: \" + e.message));\n        this.setState({confirmReceived: 0, openDispute: 0});\n    }\n\n    openDispute = (id) => {\n        // this.callBackEnd('/orderstatus', id, 3);\n        // this.callBackEnd('/userorders', 0, 0);\n        window.location.href = '/contentsupport?3';\n    }\n\n    cancelConfirm = () => {\n        this.setState({confirmReceived: 0, openDispute: 0});\n    }\n\n    formatDate = (date) => {\n        var d = new Date(date*1000),\n            month = '' + (d.getMonth() + 1),\n            day = '' + d.getDate(),\n            year = d.getFullYear();\n        if (month.length < 2) \n            month = '0' + month;\n        if (day.length < 2) \n            day = '0' + day;\n    \n        return [day, month, year].join('-');\n    }\n\n    paginationButtonClick = (e) => {\n        let newpage = 1;\n        switch(e.target.id) {\n            case 'first':\n                this.setState({page: 1});\n                break;\n            case 'previous':\n                this.state.page > 1 ? newpage = this.state.page-1 : newpage = 1;\n                this.setState({page: newpage});\n                break;\n            case 'next':\n                this.state.page < this.state.numPages ? newpage = this.state.page+1 : newpage = this.state.numPages;\n                this.setState({page: newpage});\n                break;\n            case 'last':\n                this.setState({page: this.state.numPages});\n                break;\n            default:\n                return null;\n        }\n    }\n\n    mapOrders = () => {\n\n        let numOrders = this.state.orders.length;\n        let n = this.state.perPage;\n        let p = this.state.page - 1;\n        let till;\n        p*n + n < numOrders ? till = (p+1)*n : till = numOrders;\n        let ordersPortion = this.state.orders.slice(p*n, till);\n\n        return (\n            <div className = 'orderListWrapper'>                    \n            {ordersPortion.map((order) =>\n                <li key={order.order_id} style={{ listStyleType: \"none\" }}>\n                    Številka naročila: <span style={{fontWeight: 'bold'}}> {order.order_id} </span>\n                    Datum naročila:  <span style={{fontWeight: 'bold'}}>{this.formatDate(order.date_modified)} </span>\n                    Cena:  <span style={{fontWeight: 'bold'}}>{order.price} € </span>\n                    Poštnina:  <span style={{fontWeight: 'bold'}}>{order.postage} € </span>\n                    Prodajalec: <span style={{fontWeight: 'bold'}}>{order.seller} </span>\n                    Izdelki: {order.ad_ids.split(',').map(id => <NavLink to={\"/item?\" + id} key = {id} className = 'btn_nopad'>{id}</NavLink>)}\n                    {order.status === 1 && <p><b>Naročilo je odposlano.</b></p>}\n                    <br/>\n                    {order.status === 1 && <button className = {['btn_nopad', 'btn_marg', 'btn_blue'].join(\" \")} onClick = {() => this.setState({confirmReceived: order.order_id})}>POTRDI PREJEM</button>}\n                    {(order.status === 0 || order.status === 1) && <NavLink className = {['btn_nopad', 'btn_marg', 'btn_lightyellow'].join(\" \")} to = {'/chatpage/conversation?' + order.seller_id}>KONTAKTIRAJ PRODAJALCA</NavLink>}\n                    {((order.status === 0 || order.status === 1) && order.dispute === 0) && <button className = {['btn_nopad', 'btn_marg', 'btn_yellow'].join(\" \")} onClick = {() => this.setState({openDispute: order.order_id})}>ODPRI PRITOŽBO</button>}\n                    {order.dispute === 1 && <button className = {['btn_nopad', 'btn_marg', 'btn_red', 'btn_nocursor'].join(\" \")}>ODPRTA PRITOŽBA</button>}\n                    {order.status === 2 && <button className = {['btn_nopad', 'btn_marg', 'btn_green', 'btn_nocursor'].join(\" \")}>ZAKLJUČENO</button>}\n                    {order.status === 4 && <button className = {['btn_nopad', 'btn_marg', 'btn_red', 'btn_nocursor'].join(\" \")}>PREKLICANO</button>}\n                </li>\n            )}\n                <div>\n                    <button id='first' className='btn_nopad' onClick={this.paginationButtonClick}>PRVA</button>\n                    <button id='previous' className='btn_nopad' onClick={this.paginationButtonClick}>&#60;&#60;</button>\n                    <button id='current' className='btn_nopad'>{this.state.page}/{this.state.numPages}</button>\n                    <button id='next' className='btn_nopad' onClick={this.paginationButtonClick}>&#62;&#62;</button>\n                    <button id='last' className='btn_nopad' onClick={this.paginationButtonClick}>ZADNJA</button>\n                </div>\n            </div>\n        )\n    }\n\n    switchRender = () => {\n        if(this.state.userId === '0') {\n            return (\n                <div style = {{backgroundColor: 'rgb(255,255,255,0.5)'}}>\n                    <br/><br/><br/>\n                    <h2>PROSIMO PRIJAVITE SE V SISTEM!</h2>\n                    <br/><br/><br/>\n                </div>\n            )\n        }\n        else if(!this.state.orders.length) {\n            return (<div><h2 style = {{color: 'white'}}>NIČESAR ŠE NISTE NAROČILI.</h2></div>)\n        } else if(this.state.confirmReceived || this.state.openDispute) {\n            return (\n                <div className = 'userContainer'>\n                    <br/>\n                    <br/>\n                    {this.mapOrders()}\n                    <Popup open = {true}\n                        position = 'center center'\n                        onClose={this.closeModal}>\n                        <div style = {{display: 'inline-flex', justifyContent: 'space-around'}}>\n                            {this.state.confirmReceived ? <p style= {{margin: 'auto 10px'}}>S potrditvijo bo naročilo zaključeno in pritožba ne bo več možna. Ali ste prepričani, da želite potrditi prejem izdelkov?</p> : null}\n                            {this.state.confirmReceived ? <button className = 'btnb' onClick ={() => this.confirmGoodsReceived(this.state.confirmReceived)}>DA</button> : null}\n                            {this.state.openDispute ? <p style= {{margin: 'auto 10px'}}>Pritožbo podajte le, če ste že kontaktirali prodajalca in niste prišli do sporazumne rešitve. Želite nadaljevati?</p> : null}\n                            {this.state.openDispute ? <button className = 'btnb' onClick ={() => this.openDispute(this.state.openDispute)}>DA</button> : null}\n                            <button className = 'btnb' onClick = {this.cancelConfirm}>NE</button>\n                        </div>\n                    </Popup>\n                </div>\n            )\n        }\n        else return(\n            <div className = 'userContainer'>\n            <br/>\n            <br/>\n            {this.mapOrders()}\n        </div>\n        )\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n            <UpperLine/>\n            <Header/>\n            <NavBar/>\n            <BreadCrumbs pathname = {this.props.location.pathname}/>\n            <UserSideBar/>\n            {this.switchRender()}\n            <AdSpace/>\n            <Bottom/>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n      loggedInUser: state.loggedInUser,\n      loggedInUserId: state.loggedInUserId\n    };\n  };\n\n\nexport default connect(mapStateToProps) (PastOrders);\n\n"]},"metadata":{},"sourceType":"module"}