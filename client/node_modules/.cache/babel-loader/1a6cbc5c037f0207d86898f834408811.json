{"ast":null,"code":"var _jsxFileName = \"/home/katja/REACT/test-app/src/pages/Chat/Conversation.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport UpperLine from '../../components/UpperLine';\nimport Header from '../../components/Header';\nimport NewMsg from './NewMsg';\nimport Sent from './Sent';\nimport '../../App.css';\nimport { Redirect, NavLink } from 'react-router-dom';\nimport NavBar from '../../components/NavBar';\nimport Bottom from '../../components/Bottom';\nimport BreadCrumbs from '../../components/BreadCrumbs';\n\nclass Conversation extends Component {\n  constructor(props) {\n    super(props);\n\n    this.sendMsg = newMsg => {\n      this.setState({\n        newMsg\n      });\n      const receiverId = this.interlocutorId();\n      fetch('/messageroutes', {\n        signal: this.abortController.signal,\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify({\n          type: 2,\n          receiverId: receiverId,\n          msg: newMsg\n        })\n      }).then(res => res.json()).then(res => res.success && this.setState(state => {\n        const messages = [...state.messages, {\n          time: 'now',\n          sender: this.props.loggedInUser,\n          msg: state.newMsg\n        }];\n        return { ...state,\n          messages,\n          newMsg: ''\n        };\n      })).catch(e => console.error(\"Critical failure: \" + e.message));\n    };\n\n    this.state = {\n      time: null,\n      interlocutor: '',\n      messages: [],\n      newMsg: ''\n    };\n  }\n\n  render() {\n    const messages = this.state.messages;\n    const N = this.state.messages.length;\n    const n = 5;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(UpperLine, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(NavBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(BreadCrumbs, {\n      pathname: this.props.location.pathname,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Sent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(NewMsg, {\n      callBackParent: this.sendMsg,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Bottom, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    loggedInUser: state.loggedInUser,\n    loggedInUserId: state.loggedInUserId\n  };\n};\n\nexport default connect(mapStateToProps)(Conversation);","map":{"version":3,"sources":["/home/katja/REACT/test-app/src/pages/Chat/Conversation.jsx"],"names":["React","Component","connect","UpperLine","Header","NewMsg","Sent","Redirect","NavLink","NavBar","Bottom","BreadCrumbs","Conversation","constructor","props","sendMsg","newMsg","setState","receiverId","interlocutorId","fetch","signal","abortController","method","headers","body","JSON","stringify","type","msg","then","res","json","success","state","messages","time","sender","loggedInUser","catch","e","console","error","message","interlocutor","render","N","length","n","location","pathname","mapStateToProps","loggedInUserId"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport UpperLine from '../../components/UpperLine';\nimport Header from '../../components/Header';\nimport NewMsg from './NewMsg';\nimport Sent from './Sent';\nimport '../../App.css';\nimport { Redirect, NavLink } from 'react-router-dom';\nimport NavBar from '../../components/NavBar';\nimport Bottom from '../../components/Bottom';\nimport BreadCrumbs from '../../components/BreadCrumbs';\n\n\nclass Conversation extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n        this.state = {\n            time: null,\n            interlocutor: '',\n            messages: [],\n            newMsg: ''\n        }\n    }\n\n\n    sendMsg = (newMsg) => {\n        this.setState({newMsg})\n        const receiverId = this.interlocutorId();\n        fetch('/messageroutes', {\n            signal: this.abortController.signal,\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            body: JSON.stringify({\n                type: 2,\n                receiverId: receiverId,\n                msg: newMsg\n            })\n        }).then(res => res.json())\n        .then(res => res.success && this.setState(state => {const messages = [...state.messages, ({time: 'now', sender: this.props.loggedInUser, msg: state.newMsg})]; return {...state, messages, newMsg: ''}}))\n        .catch(e => console.error(\"Critical failure: \" + e.message));\n    }\n\n    render() {\n\n        const messages = this.state.messages;\n        const N = this.state.messages.length;\n        const n = 5;\n\n        return (\n            <div className = 'App'>\n            <UpperLine/>\n            <Header/>\n            <NavBar/>\n            <BreadCrumbs pathname = {this.props.location.pathname}/>\n            <Sent/>\n                \n                    <div>\n                        <NewMsg callBackParent = {this.sendMsg}/>\n                    </div>\n\n                <Bottom/>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n      loggedInUser: state.loggedInUser,\n      loggedInUserId: state.loggedInUserId\n    };\n};\n\nexport default connect(mapStateToProps) (Conversation)"]},"metadata":{},"sourceType":"module"}