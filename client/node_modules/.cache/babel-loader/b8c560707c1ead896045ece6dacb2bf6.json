{"ast":null,"code":"var _jsxFileName = \"/home/katja/REACT/test-app/src/pages/Chat/Conversation.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport UpperLine from '../../components/UpperLine';\nimport Header from '../../components/Header';\nimport NewMsg from './NewMsg';\nimport NavBar from '../../components/NavBar';\nimport AdSpace from '../../components/AdSpace';\nimport Bottom from '../../components/Bottom';\nimport BreadCrumbs from '../../components/BreadCrumbs';\nimport '../../App.css';\n\nclass Conversation extends Component {\n  constructor(props) {\n    super(props);\n    this.abortController = new AbortController();\n\n    this.msgFetch = () => {\n      const iLId = this.interlocutorId();\n      this.interlocutor(iLId);\n      fetch('/messageroutes', {\n        signal: this.abortController.signal,\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify({\n          type: 1,\n          conversantId: iLId\n        })\n      }).then(res => res.json()).then(results => {\n        const messages = results.map(result => ({\n          time: result.date_created,\n          sender: result.sender,\n          msg: result.msg\n        }));\n        this.setState({\n          messages\n        });\n      }).catch(e => console.error(\"Critical failure: \" + e.message));\n    };\n\n    this.sendMsg = newMsg => {\n      this.setState({\n        newMsg\n      });\n      const receiverId = this.interlocutorId();\n      fetch('/messageroutes', {\n        signal: this.abortController.signal,\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify({\n          type: 2,\n          receiverId: receiverId,\n          msg: newMsg\n        })\n      }).then(res => res.json()).then(res => res.success && this.setState(state => {\n        const messages = [...state.messages, {\n          time: 'now',\n          sender: this.props.loggedInUser,\n          msg: state.newMsg\n        }];\n        return { ...state,\n          messages,\n          newMsg: ''\n        };\n      })).catch(e => console.error(\"Critical failure: \" + e.message));\n    };\n\n    this.interlocutor = iLId => {\n      fetch('/firstname', {\n        signal: this.abortController.signal,\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify({\n          iLId: iLId\n        })\n      }).then(res => res.json()).then(res => this.setState({\n        interlocutor: res[0].first_name\n      })).catch(e => console.error(\"Critical failure: \" + e.message));\n    };\n\n    this.switchRender = () => {\n      const messages = this.state.messages;\n      const N = this.state.messages.length;\n      const n = 5;\n\n      if (this.state.userId === '0') {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            backgroundColor: 'rgb(255,255,255,0.5)'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 20\n          }\n        }, /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 17\n          }\n        }), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 22\n          }\n        }), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 27\n          }\n        }), /*#__PURE__*/React.createElement(\"h2\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 17\n          }\n        }, \"PROSIMO PRIJAVITE SE V SISTEM!\"), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 17\n          }\n        }), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 22\n          }\n        }), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 27\n          }\n        }));\n      } else return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          backgroundColor: 'rgb(255, 255, 255, 0.8)'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }\n      }, this.state.time), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          fontSize: '30px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }\n      }, \"POGOVOR S/Z: \", /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 58\n        }\n      }, this.state.interlocutor)), N > n && /*#__PURE__*/React.createElement(NavLink, {\n        exact: true,\n        to: this.props.location.pathname + '/all?' + this.interlocutorId(),\n        className: \"btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 23\n        }\n      }, \"POKA\\u017DI STAREJ\\u0160A SPORO\\u010CILA\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"ul\", {\n        style: {\n          display: 'inline-block',\n          maxWidth: '60vw',\n          paddingLeft: '0px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }\n      }, N > n && messages.slice(N - n, N).map((msg, index) => /*#__PURE__*/React.createElement(\"li\", {\n        key: index,\n        style: {\n          listStyleType: 'none',\n          lineHeight: '35px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 17\n        }\n      }, msg.time.substring(8, 10), \"-\", msg.time.substring(5, 7), \"-\", msg.time.substring(0, 4), \" \", msg.time.substring(11, 16), \": \", /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 129\n        }\n      }, msg.sender), \": \", msg.msg)), N <= n && this.state.messages.map((msg, index) => /*#__PURE__*/React.createElement(\"li\", {\n        key: index,\n        style: {\n          listStyleType: 'none',\n          lineHeight: '35px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 17\n        }\n      }, msg.time.substring(8, 10), \"-\", msg.time.substring(6, 7), \"-\", msg.time.substring(0, 4), \" \", msg.time.substring(11, 16), \": \", /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 129\n        }\n      }, msg.sender), \": \", msg.msg))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(NewMsg, {\n        callBackParent: this.sendMsg,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }\n      })));\n    };\n\n    this.state = {\n      userId: '0',\n      time: null,\n      interlocutor: '',\n      messages: [],\n      newMsg: ''\n    };\n  }\n\n  componentDidMount() {\n    fetch('/sessionroutes', {\n      signal: this.abortController.signal\n    }).then(res => res.json()).then(res => this.setState({\n      userId: res.userId\n    })).catch(e => console.error(\"Critical failure: \" + e.message));\n    this.msgFetch();\n    this.interval = setInterval(() => {\n      this.msgFetch();\n    }, 30000);\n  }\n\n  componentWillUnmount() {\n    this.abortController.abort();\n    clearInterval(this.interval);\n  }\n\n  interlocutorId() {\n    function subStrAfterChars(str, char) {\n      return str.substring(str.indexOf(char) + 1);\n    }\n\n    const interlocutorId = subStrAfterChars(window.location.href, '?');\n    return interlocutorId;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(UpperLine, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(NavBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(BreadCrumbs, {\n      pathname: this.props.location.pathname,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }\n    }), this.switchRender(), /*#__PURE__*/React.createElement(AdSpace, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Bottom, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    loggedInUser: state.loggedInUser,\n    loggedInUserId: state.loggedInUserId\n  };\n};\n\nexport default connect(mapStateToProps)(Conversation);","map":{"version":3,"sources":["/home/katja/REACT/test-app/src/pages/Chat/Conversation.jsx"],"names":["React","Component","connect","NavLink","UpperLine","Header","NewMsg","NavBar","AdSpace","Bottom","BreadCrumbs","Conversation","constructor","props","abortController","AbortController","msgFetch","iLId","interlocutorId","interlocutor","fetch","signal","method","headers","body","JSON","stringify","type","conversantId","then","res","json","results","messages","map","result","time","date_created","sender","msg","setState","catch","e","console","error","message","sendMsg","newMsg","receiverId","success","state","loggedInUser","first_name","switchRender","N","length","n","userId","backgroundColor","fontSize","location","pathname","display","maxWidth","paddingLeft","slice","index","listStyleType","lineHeight","substring","componentDidMount","interval","setInterval","componentWillUnmount","abort","clearInterval","subStrAfterChars","str","char","indexOf","window","href","render","mapStateToProps","loggedInUserId"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport UpperLine from '../../components/UpperLine';\nimport Header from '../../components/Header';\nimport NewMsg from './NewMsg';\nimport NavBar from '../../components/NavBar';\nimport AdSpace from '../../components/AdSpace';\nimport Bottom from '../../components/Bottom';\nimport BreadCrumbs from '../../components/BreadCrumbs';\nimport '../../App.css';\n\n\nclass Conversation extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n        this.state = {\n            userId: '0',\n            time: null,\n            interlocutor: '',\n            messages: [],\n            newMsg: ''\n        }\n    }\n\n    abortController = new AbortController();\n\n    componentDidMount() {\n        fetch('/sessionroutes', {signal: this.abortController.signal})\n        .then(res => res.json())\n        .then(res => this.setState({userId: res.userId}))\n        .catch(e => console.error(\"Critical failure: \" + e.message));\n\n        this.msgFetch();\n        this.interval = setInterval(() => {this.msgFetch();}, 30000);\n    }\n\n    componentWillUnmount() {\n        this.abortController.abort();\n        clearInterval(this.interval);\n    }\n\n    msgFetch = () => {\n        const iLId = this.interlocutorId();\n        this.interlocutor(iLId);\n        fetch('/messageroutes', {\n            signal: this.abortController.signal,\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            body: JSON.stringify({\n                type: 1,\n                conversantId: iLId\n            })\n        })\n        .then(res => res.json())\n        .then(results => {\n            const messages = results.map(result => ({time: result.date_created, sender: result.sender, msg: result.msg}));\n            this.setState({messages})\n        })\n        .catch(e => console.error(\"Critical failure: \" + e.message));\n    }\n\n    sendMsg = (newMsg) => {\n        this.setState({newMsg})\n        const receiverId = this.interlocutorId();\n        fetch('/messageroutes', {\n            signal: this.abortController.signal,\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            body: JSON.stringify({\n                type: 2,\n                receiverId: receiverId,\n                msg: newMsg\n            })\n        }).then(res => res.json())\n        .then(res => res.success && this.setState(state => {const messages = [...state.messages, ({time: 'now', sender: this.props.loggedInUser, msg: state.newMsg})];\n                                        return {...state, messages, newMsg: ''}}))\n        .catch(e => console.error(\"Critical failure: \" + e.message));\n    }\n\n    interlocutorId() {\n        function subStrAfterChars(str, char) {\n            return str.substring(str.indexOf(char) + 1);\n        }\n        const interlocutorId = subStrAfterChars(window.location.href, '?');\n        return interlocutorId;\n    }\n\n    interlocutor = (iLId) => {\n        fetch('/firstname', {\n            signal: this.abortController.signal,\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            body: JSON.stringify({\n                iLId: iLId,\n            })\n        }).then(res => res.json())\n        .then(res => this.setState({interlocutor: res[0].first_name}))\n        .catch(e => console.error(\"Critical failure: \" + e.message));\n    }\n\n    switchRender = () => {\n        const messages = this.state.messages;\n        const N = this.state.messages.length;\n        const n = 5;\n\n        if (this.state.userId === '0') {\n            return <div style = {{backgroundColor: 'rgb(255,255,255,0.5)'}}>\n                <br/><br/><br/>\n                <h2>PROSIMO PRIJAVITE SE V SISTEM!</h2>\n                <br/><br/><br/>\n            </div>\n        }\n        else return <div style = {{backgroundColor: 'rgb(255, 255, 255, 0.8)'}}>\n            <p>{this.state.time}</p>\n            <br/>\n            <p style = {{fontSize: '30px'}}>POGOVOR S/Z: <b>{this.state.interlocutor}</b></p>\n            {N > n && <NavLink exact to = {this.props.location.pathname + '/all?' + this.interlocutorId()} className = 'btn'>POKAŽI STAREJŠA SPOROČILA</NavLink>}\n            <br/>\n            <ul style = {{display: 'inline-block', maxWidth: '60vw', paddingLeft: '0px'}}>\n            {N > n && (\n            messages.slice(N-n, N)\n            .map((msg, index) =>\n                <li key={index} style={{listStyleType: 'none', lineHeight: '35px'}}>\n                    {msg.time.substring(8,10)}-{msg.time.substring(5,7)}-{msg.time.substring(0,4)} {msg.time.substring(11,16)}: <b>{msg.sender}</b>: {msg.msg}</li>))}\n            {N <= n && this.state.messages.map((msg, index) =>\n                <li key={index} style={{listStyleType: 'none', lineHeight: '35px'}}>\n                    {msg.time.substring(8,10)}-{msg.time.substring(6,7)}-{msg.time.substring(0,4)} {msg.time.substring(11,16)}: <b>{msg.sender}</b>: {msg.msg}</li>)}\n            </ul>\n            <br/>\n            <br/>\n            <div>\n                <NewMsg callBackParent = {this.sendMsg}/>\n            </div>\n        </div>\n    }\n\n    render() {\n        return (\n            <div className = 'App'>\n                <UpperLine/>\n                <Header/>\n                <NavBar/>\n                <BreadCrumbs pathname = {this.props.location.pathname}/>\n                {this.switchRender()}\n                <AdSpace/>\n                <Bottom/>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n      loggedInUser: state.loggedInUser,\n      loggedInUserId: state.loggedInUserId\n    };\n};\n\nexport default connect(mapStateToProps) (Conversation)"]},"metadata":{},"sourceType":"module"}