{"ast":null,"code":"import axios from 'axios'; //UploadPage.jsx, editPage.jsx\n\nexport function doUpload(type, selection, userId, user, signal, adId, photos) {\n  if (photos) {\n    console.log(photos);\n    const data = new FormData();\n    const files = photos.map(photo => {\n      return photo.file;\n    });\n\n    for (let i = 0; i < files.length; i++) {\n      data.append('file', files[i]);\n    }\n\n    for (let i = 0; i < files.length; i++) {\n      data.append('fileName' + (i + 1), files[i].name);\n    }\n\n    const crops = photos.map(photo => {\n      return photo.crop;\n    });\n\n    for (let i = 0; i < crops.length; i++) {\n      data.append('width' + (i + 1), crops[i].width);\n      data.append('height' + (i + 1), crops[i].height);\n      data.append('left' + (i + 1), crops[i].x);\n      data.append('top' + (i + 1), crops[i].y);\n    }\n\n    Object.keys(selection).forEach(key => {\n      data.append(key, selection[key]);\n    });\n    data.append('userId', userId);\n    data.append('userName', user);\n    data.append('type', type);\n    data.append('adId', adId);\n    return axios.post(\"http://185.185.41.32:4007/uploadListing\", data, {\n      cancelToken: signal.token\n    }); //        .then(res => {console.log(\"UPLOAD: \" + res.statusText)})\n    //        .catch(e => console.error(\"Critical failure: \" + e.message));;\n  } else {\n    return fetch('/editListing', {\n      signal: signal,\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      body: JSON.stringify({\n        selection,\n        userId: userId,\n        userName: user,\n        type: type,\n        adId: adId\n      })\n    }); //.then(res => console.log(res.json()))\n    //.catch(e => console.error(\"Critical failure: \" + e.message));\n  }\n}","map":{"version":3,"sources":["/home/katja/REACT/test-app/src/functions/uploadEditPageFuncs/index.js"],"names":["axios","doUpload","type","selection","userId","user","signal","adId","photos","console","log","data","FormData","files","map","photo","file","i","length","append","name","crops","crop","width","height","x","y","Object","keys","forEach","key","post","cancelToken","token","fetch","method","headers","body","JSON","stringify","userName"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\n//UploadPage.jsx, editPage.jsx\n\nexport function doUpload(type, selection, userId, user, signal, adId, photos) {\n\n    if(photos) {\n        console.log(photos);\n        const data = new FormData();\n\n        const files = photos.map(photo => {\n            return photo.file;\n        })\n        for(let i = 0; i<files.length; i++) {\n            data.append('file', files[i]);\n        }\n        for(let i = 0; i<files.length; i++) {\n            data.append('fileName' + (i+1), files[i].name);\n        }\n\n        const crops = photos.map(photo => {\n            return photo.crop;\n        })\n        for(let i = 0; i<crops.length; i++) {\n            data.append('width' + (i+1), crops[i].width);\n            data.append('height' + (i+1), crops[i].height);\n            data.append('left' + (i+1), crops[i].x);\n            data.append('top' + (i+1), crops[i].y);\n        }\n\n        Object.keys(selection).forEach(key => {\n            data.append(key, selection[key]);\n        });\n\n        data.append('userId', userId);\n        data.append('userName', user);\n        data.append('type', type);\n        data.append('adId', adId);\n\n        return axios.post(\"http://185.185.41.32:4007/uploadListing\", data, {\n            cancelToken: signal.token})\n//        .then(res => {console.log(\"UPLOAD: \" + res.statusText)})\n//        .catch(e => console.error(\"Critical failure: \" + e.message));;\n    } else {\n        return fetch('/editListing', {\n            signal: signal,\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            body: JSON.stringify({\n                selection,\n                userId: userId,\n                userName: user,\n                type: type,\n                adId: adId\n            })\n        })//.then(res => console.log(res.json()))\n        //.catch(e => console.error(\"Critical failure: \" + e.message));\n    }\n}"]},"metadata":{},"sourceType":"module"}