{"ast":null,"code":"import { LOG_IN, LOG_OUT, SAVE_ATT } from './actions';\nconst initialState = {\n  loggedInUser: 'guest',\n  loggedInUserId: 0,\n  saveAttempt: false,\n  cartUpdate: false,\n  page: 1\n};\n\nfunction rootReducer(state = initialState, action) {\n  switch (action.type) {\n    case LOG_IN:\n      return {\n        loggedInUser: action.name,\n        loggedInUserId: action.uid\n      };\n\n    case LOG_OUT:\n      return {\n        loggedInUser: 'guest',\n        loggedInUserId: 0\n      };\n\n    case SAVE_ATT:\n      return {\n        saveAttempt: action.att\n      };\n\n    /*case ADD_TO_CART:\n        //updatedCart = state.cart.push(action.id);\n        return{\n            cart: [...initialState.cart, action.id]\n        }\n    case REMOVE_FROM_CART:\n        let updatedCart = initialState.cart.splice(state.cart.indexOf(action.id), 1 );\n        return{\n            cart: updatedCart\n        }\n    case UPDATE_CART:\n        return{\n            cart: action.items\n        }\n    case ADD_TO_ORDER:\n        //updatedCart = state.cart.push(action.id);\n        return{ order: action.id };*/\n\n    default:\n      return initialState;\n  }\n\n  ;\n}\n\nexport default rootReducer;","map":{"version":3,"sources":["/home/katni/REACT/test-app/src/redux/reducers.js"],"names":["LOG_IN","LOG_OUT","SAVE_ATT","initialState","loggedInUser","loggedInUserId","saveAttempt","cartUpdate","page","rootReducer","state","action","type","name","uid","att"],"mappings":"AAAA,SAASA,MAAT,EACQC,OADR,EAEQC,QAFR,QAEwB,WAFxB;AAKA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,YAAY,EAAE,OADG;AAEjBC,EAAAA,cAAc,EAAE,CAFC;AAGjBC,EAAAA,WAAW,EAAE,KAHI;AAIjBC,EAAAA,UAAU,EAAE,KAJK;AAKjBC,EAAAA,IAAI,EAAE;AALW,CAArB;;AAQA,SAASC,WAAT,CAAqBC,KAAK,GAAGP,YAA7B,EAA2CQ,MAA3C,EAAmD;AAEjD,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKZ,MAAL;AACE,aAAO;AAAEI,QAAAA,YAAY,EAAEO,MAAM,CAACE,IAAvB;AAA6BR,QAAAA,cAAc,EAAEM,MAAM,CAACG;AAApD,OAAP;;AAEF,SAAKb,OAAL;AACE,aAAO;AAAEG,QAAAA,YAAY,EAAE,OAAhB;AAAyBC,QAAAA,cAAc,EAAE;AAAzC,OAAP;;AAEF,SAAKH,QAAL;AACI,aAAO;AAAEI,QAAAA,WAAW,EAAEK,MAAM,CAACI;AAAtB,OAAP;;AAEJ;;;;;;;;;;;;;;;;;;AAkBA;AACE,aAAOZ,YAAP;AA7BJ;;AA8BC;AACF;;AAED,eAAeM,WAAf","sourcesContent":["import { LOG_IN,\n        LOG_OUT,\n        SAVE_ATT } from './actions';\n\n\nconst initialState = {\n    loggedInUser: 'guest',\n    loggedInUserId: 0,\n    saveAttempt: false,\n    cartUpdate: false,\n    page: 1\n};\n\nfunction rootReducer(state = initialState, action) {\n\n  switch(action.type) {\n    case LOG_IN:\n      return { loggedInUser: action.name, loggedInUserId: action.uid };\n\n    case LOG_OUT:\n      return { loggedInUser: 'guest', loggedInUserId: 0 };\n\n    case SAVE_ATT:\n        return { saveAttempt: action.att };\n    \n    /*case ADD_TO_CART:\n        //updatedCart = state.cart.push(action.id);\n        return{\n            cart: [...initialState.cart, action.id]\n        }\n    case REMOVE_FROM_CART:\n        let updatedCart = initialState.cart.splice(state.cart.indexOf(action.id), 1 );\n        return{\n            cart: updatedCart\n        }\n    case UPDATE_CART:\n        return{\n            cart: action.items\n        }\n    case ADD_TO_ORDER:\n        //updatedCart = state.cart.push(action.id);\n        return{ order: action.id };*/\n\n    default:\n      return initialState;\n  };\n}\n\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}