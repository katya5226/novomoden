{"ast":null,"code":"import React from 'react';\nimport '../../App.css';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { saveAtt } from '../../redux/actions';\nimport { doUpload } from '../../functions/uploadEditPageFuncs/index';\n\nclass EditPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.abortController = new AbortController();\n    this.axiosSignal = axios.CancelToken.source();\n\n    this.checkIfAll = () => {\n      let check = true;\n      const selection = this.state.selection;\n      Object.keys(selection).forEach(key => {\n        if (selection[key] === 0 && selection.category !== 3 || selection[key] === null || selection[key] === '') {\n          check = false;\n          this.setState({\n            warning: 'Izpolni vsa polja'\n          });\n        }\n      });\n\n      if (this.state.photos.length < 3 && this.state.photos.length !== 0) {\n        check = false;\n        this.setState({\n          warning: 'Izberi tri fotografije'\n        });\n      }\n\n      return check;\n    };\n\n    this.onImageSaved = (photo, index) => {\n      if (this.state.photos.length <= index) {\n        this.setState(state => {\n          const photos = state.photos.concat(photo);\n          return {\n            photos\n          };\n        });\n      } else {\n        this.setState(state => {\n          const photos = state.photos.map((item, j) => {\n            if (j === index) {\n              return photo;\n            } else {\n              return item;\n            }\n          });\n          return {\n            photos\n          };\n        });\n      }\n    };\n\n    this.onSelectionSaved = selection => {\n      this.setState({\n        selection\n      });\n    };\n\n    this.state = {\n      adId: '',\n      uploadedPhotos: [],\n      photos: [],\n      urls: [],\n      fileWarning: '',\n      warning: '',\n      srcsToPass: [],\n      editStatus: false,\n      selection: {\n        category: '',\n        subcategory: '',\n        clothsize: '',\n        material: '',\n        condition: '',\n        brand: '',\n        descrtext: '',\n        weight: null,\n        price: null\n      },\n      loading: false\n    };\n    this.handleUpload = this.handleUpload.bind(this);\n  }\n\n  componentDidMount() {\n    const adId = this.props.adId;\n\n    if (adId !== '') {\n      fetch('/fillform', {\n        signal: this.abortController.signal,\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify({\n          adId: adId\n        })\n      }).then(res => res.json()).then(res => this.setState(state => {\n        let arr = [res[0].photo1_url, res[0].photo2_url, res[0].photo3_url];\n        let srcsToPass = state.srcsToPass.concat(arr);\n        return {\n          srcsToPass\n        };\n      })).catch(e => console.error(\"Critical failure: \" + e.message));\n    }\n  }\n\n  componentWillUnmount() {\n    this.abortController.abort();\n    this.axiosSignal.cancel('Api is being canceled');\n  }\n\n  handleUpload() {\n    this.props.saveAtt(true);\n\n    if (!this.checkIfAll()) {\n      this.setState({\n        warning: \"IZPOLNI VSA POLJA!\"\n      });\n    } else {\n      this.setState({\n        loading: true\n      });\n\n      if (this.state.photos.length === 3) {\n        doUpload('edit', this.state.selection, this.props.loggedInUserId, this.props.loggedInUser, this.axiosSignal, this.props.adId, this.state.photos).then(res => {\n          console.log(\"UPLOAD RESPONSE: \" + res.statusText);\n          this.setState({\n            editStatus: true,\n            loading: false\n          });\n        }).catch(e => console.error(\"Critical failure: \" + e.message));\n      } else {\n        doUpload('edit', this.state.selection, this.props.loggedInUserId, this.props.loggedInUser, this.abortController.signal, this.props.adId).then(res => {\n          console.log(res.json());\n          this.setState({\n            editStatus: true,\n            loading: false\n          });\n        }).catch(e => console.error(\"Critical failure: \" + e.message));\n      }\n    }\n  }\n\n  render() {\n    return this.props.render({\n      state: this.state,\n      onSelectionSaved: this.onSelectionSaved,\n      onImageSaved: this.onImageSaved,\n      handleUpload: this.handleUpload,\n      srcsToPass: this.state.srcsToPass\n    });\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    loggedInUser: state.loggedInUser,\n    loggedInUserId: state.loggedInUserId\n  };\n};\n\nconst mapDispatchToProps = {\n  saveAtt: saveAtt\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(EditPage);","map":{"version":3,"sources":["/home/katja/REACT/test-app/src/pages/Publish/EditPage.jsx"],"names":["React","axios","connect","saveAtt","doUpload","EditPage","Component","constructor","props","abortController","AbortController","axiosSignal","CancelToken","source","checkIfAll","check","selection","state","Object","keys","forEach","key","category","setState","warning","photos","length","onImageSaved","photo","index","concat","map","item","j","onSelectionSaved","adId","uploadedPhotos","urls","fileWarning","srcsToPass","editStatus","subcategory","clothsize","material","condition","brand","descrtext","weight","price","loading","handleUpload","bind","componentDidMount","fetch","signal","method","headers","body","JSON","stringify","then","res","json","arr","photo1_url","photo2_url","photo3_url","catch","e","console","error","message","componentWillUnmount","abort","cancel","loggedInUserId","loggedInUser","log","statusText","render","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../../App.css';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { saveAtt } from '../../redux/actions';\nimport {doUpload} from '../../functions/uploadEditPageFuncs/index';\n\n\nclass EditPage extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n            adId: '',\n            uploadedPhotos: [],\n            photos: [],\n            urls: [],\n            fileWarning: '',\n            warning: '',\n            srcsToPass: [],\n            editStatus: false,\n            selection: {\n                category: '',\n                subcategory: '',\n                clothsize: '',\n                material: '',\n                condition: '',\n                brand: '',\n                descrtext: '',\n                weight: null,\n                price: null\n            },\n            loading: false\n        };\n        this.handleUpload = this.handleUpload.bind(this);\n    }\n\n    abortController = new AbortController();\n    axiosSignal = axios.CancelToken.source();\n\n    componentDidMount() {\n\n        const adId = this.props.adId;\n\n        if(adId !== '') {\n            fetch('/fillform', {\n                signal: this.abortController.signal,\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                body: JSON.stringify({adId: adId})\n            }).then(res => res.json())\n                .then(res => this.setState(state => {\n                    let arr = [res[0].photo1_url, res[0].photo2_url, res[0].photo3_url];\n                    let srcsToPass = state.srcsToPass.concat(arr);\n                    return {srcsToPass};\n                    }))\n\n                .catch(e => console.error(\"Critical failure: \" + e.message));           \n        }\n    }\n\n    componentWillUnmount() {\n        this.abortController.abort();\n        this.axiosSignal.cancel('Api is being canceled');\n    }\n\n    checkIfAll = () => {\n        let check = true;\n        const selection = this.state.selection;\n        Object.keys(selection).forEach(key => {\n            if((selection[key] === 0 && selection.category !== 3) || selection[key] === null || selection[key] === '') {\n                check = false;\n                this.setState({warning: 'Izpolni vsa polja'});\n            }\n        });\n        if (this.state.photos.length < 3 && this.state.photos.length !== 0) {\n            check = false;\n            this.setState({warning: 'Izberi tri fotografije'});\n        }\n        return check;\n    }\n\n    onImageSaved = (photo, index) => {\n\n        if (this.state.photos.length <= index) {\n            this.setState(state => {\n                const photos = state.photos.concat(photo);\n                return {photos};\n            });\n        } else {\n            this.setState(state => {\n                const photos = state.photos.map((item, j) => {\n                if (j === index) {\n                    return photo;\n                } else {\n                    return item;\n                }\n            });\n            return {photos};\n        });\n        }\n    }\n\n    onSelectionSaved = (selection) => {\n        this.setState({selection});\n    }\n\n    handleUpload() {\n\n        this.props.saveAtt(true);    \n        if (!this.checkIfAll()) {\n            this.setState({warning: \"IZPOLNI VSA POLJA!\"}); \n        }else {\n            this.setState({loading: true})\n            if(this.state.photos.length === 3) {\n                doUpload('edit', this.state.selection, this.props.loggedInUserId, this.props.loggedInUser, this.axiosSignal, this.props.adId, this.state.photos)\n                .then(res => {console.log(\"UPLOAD RESPONSE: \" + res.statusText); this.setState({editStatus: true, loading: false})})\n                .catch(e => console.error(\"Critical failure: \" + e.message));\n            } else {\n                doUpload('edit', this.state.selection, this.props.loggedInUserId, this.props.loggedInUser, this.abortController.signal, this.props.adId)\n                .then(res => {console.log(res.json()); this.setState({editStatus: true, loading: false})})\n                .catch(e => console.error(\"Critical failure: \" + e.message));\n            }\n        }\n    }\n\n    render() {\n        return this.props.render({\n            state: this.state,\n            onSelectionSaved: this.onSelectionSaved,\n            onImageSaved: this.onImageSaved,\n            handleUpload: this.handleUpload,\n            srcsToPass: this.state.srcsToPass\n          })\n\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n      loggedInUser: state.loggedInUser,\n      loggedInUserId: state.loggedInUserId\n    };\n};\n\nconst mapDispatchToProps = {\n    saveAtt: saveAtt\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (EditPage);\n"]},"metadata":{},"sourceType":"module"}